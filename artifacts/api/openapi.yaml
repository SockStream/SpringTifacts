openapi: 3.1.0
info:
  description: |2

    Artifacts is an API-based MMO game where you can manage 5 characters to explore, fight, gather resources, craft items and much more.

    Website: https://artifactsmmo.com/

    Documentation: https://docs.artifactsmmo.com/

    OpenAPI Spec: https://api.artifactsmmo.com/openapi.json
  title: Artifacts API
  version: "4.2"
servers:
- url: /
paths:
  /my/bank:
    get:
      description: Fetch bank details.
      operationId: get_bank_details_my_bank_get
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BankResponseSchema'
          description: Successfully fetched bank details.
      security:
      - JWTBearer: []
      summary: Get Bank Details
      tags:
      - My account
      x-accepts:
      - application/json
  /my/bank/items:
    get:
      description: Fetch all items in your bank.
      operationId: get_bank_items_my_bank_items_get
      parameters:
      - description: Item to search in your bank.
        explode: true
        in: query
        name: item_code
        required: false
        schema:
          description: Item to search in your bank.
          pattern: "^[a-zA-Z0-9_-]+$"
          title: Item code
          type: string
        style: form
      - description: Page number
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          description: Page number
          minimum: 1
          title: Page
          type: integer
        style: form
      - description: Page size
        explode: true
        in: query
        name: size
        required: false
        schema:
          default: 50
          description: Page size
          maximum: 100
          minimum: 1
          title: Size
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataPage_SimpleItemSchema_'
          description: Successfully fetched items.
      security:
      - JWTBearer: []
      summary: Get Bank Items
      tags:
      - My account
      x-accepts:
      - application/json
  /my/grandexchange/orders:
    get:
      description: Fetch your sell orders details.
      operationId: get_ge_sell_orders_my_grandexchange_orders_get
      parameters:
      - description: The code of the item.
        explode: true
        in: query
        name: code
        required: false
        schema:
          description: The code of the item.
          pattern: "^[a-zA-Z0-9_-]+$"
          title: Item code
          type: string
        style: form
      - description: Page number
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          description: Page number
          minimum: 1
          title: Page
          type: integer
        style: form
      - description: Page size
        explode: true
        in: query
        name: size
        required: false
        schema:
          default: 50
          description: Page size
          maximum: 100
          minimum: 1
          title: Size
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataPage_GEOrderSchema_'
          description: Successfully fetched orders details.
      security:
      - JWTBearer: []
      summary: Get Ge Sell Orders
      tags:
      - My account
      x-accepts:
      - application/json
  /my/grandexchange/history:
    get:
      description: Fetch your sales history of the last 7 days.
      operationId: get_ge_sell_history_my_grandexchange_history_get
      parameters:
      - description: Order ID to search in your history.
        explode: true
        in: query
        name: id
        required: false
        schema:
          description: Order ID to search in your history.
          pattern: "^[a-zA-Z0-9_-]+$"
          title: Order ID
          type: string
        style: form
      - description: Item to search in your history.
        explode: true
        in: query
        name: code
        required: false
        schema:
          description: Item to search in your history.
          pattern: "^[a-zA-Z0-9_-]+$"
          title: Item code
          type: string
        style: form
      - description: Page number
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          description: Page number
          minimum: 1
          title: Page
          type: integer
        style: form
      - description: Page size
        explode: true
        in: query
        name: size
        required: false
        schema:
          default: 50
          description: Page size
          maximum: 100
          minimum: 1
          title: Size
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataPage_GeOrderHistorySchema_'
          description: Successfully fetched sales history.
      security:
      - JWTBearer: []
      summary: Get Ge Sell History
      tags:
      - My account
      x-accepts:
      - application/json
  /my/details:
    get:
      description: Fetch account details.
      operationId: get_account_details_my_details_get
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MyAccountDetailsSchema'
          description: Successfully fetched account details.
      security:
      - JWTBearer: []
      summary: Get Account Details
      tags:
      - My account
      x-accepts:
      - application/json
  /my/change_password:
    post:
      description: Change your account password. Changing the password reset the account
        token.
      operationId: change_password_my_change_password_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangePassword'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseSchema'
          description: Password changed successfully.
        "458":
          description: Use a different password.
      security:
      - JWTBearer: []
      summary: Change Password
      tags:
      - My account
      x-content-type: application/json
      x-accepts:
      - application/json
  /my/{name}/action/move:
    post:
      description: Moves a character on the map using the map's X and Y position.
      operationId: action_move_my__name__action_move_post
      parameters:
      - description: Name of your character.
        explode: false
        in: path
        name: name
        required: true
        schema:
          description: Name of your character.
          pattern: "^[a-zA-Z0-9_-]+$"
          title: Character name
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DestinationSchema'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CharacterMovementResponseSchema'
          description: The character has moved successfully.
        "498":
          description: Character not found.
        "499":
          description: Character in cooldown.
        "490":
          description: Character already at destination.
        "404":
          description: Map not found.
        "486":
          description: An action is already in progress by your character.
      security:
      - JWTBearer: []
      summary: Action Move
      tags:
      - My characters
      x-content-type: application/json
      x-accepts:
      - application/json
  /my/{name}/action/rest:
    post:
      description: "Recovers hit points by resting. (1 second per 5 HP, minimum 3\
        \ seconds)"
      operationId: action_rest_my__name__action_rest_post
      parameters:
      - description: Name of your character.
        explode: false
        in: path
        name: name
        required: true
        schema:
          description: Name of your character.
          pattern: "^[a-zA-Z0-9_-]+$"
          title: Character name
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CharacterRestResponseSchema'
          description: The character has rested successfully.
        "498":
          description: Character not found.
        "499":
          description: Character in cooldown.
        "486":
          description: An action is already in progress by your character.
      security:
      - JWTBearer: []
      summary: Action Rest
      tags:
      - My characters
      x-accepts:
      - application/json
  /my/{name}/action/equip:
    post:
      description: Equip an item on your character.
      operationId: action_equip_item_my__name__action_equip_post
      parameters:
      - description: Name of your character.
        explode: false
        in: path
        name: name
        required: true
        schema:
          description: Name of your character.
          pattern: "^[a-zA-Z0-9_-]+$"
          title: Character name
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EquipSchema'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EquipmentResponseSchema'
          description: The item has been successfully equipped on your character.
        "404":
          description: Item not found.
        "498":
          description: Character not found.
        "499":
          description: Character in cooldown.
        "486":
          description: An action is already in progress by your character.
        "478":
          description: Missing item or insufficient quantity.
        "496":
          description: Character level is insufficient.
        "491":
          description: Slot is not empty.
        "485":
          description: This item is already equipped.
        "484":
          description: Character can't equip more than 100 utilities in the same slot.
        "497":
          description: Character inventory is full.
      security:
      - JWTBearer: []
      summary: Action Equip Item
      tags:
      - My characters
      x-content-type: application/json
      x-accepts:
      - application/json
  /my/{name}/action/unequip:
    post:
      description: Unequip an item on your character.
      operationId: action_unequip_item_my__name__action_unequip_post
      parameters:
      - description: Name of your character.
        explode: false
        in: path
        name: name
        required: true
        schema:
          description: Name of your character.
          pattern: "^[a-zA-Z0-9_-]+$"
          title: Character name
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UnequipSchema'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EquipmentResponseSchema'
          description: The item has been successfully unequipped and added in their
            inventory.
        "404":
          description: Item not found.
        "498":
          description: Character not found.
        "486":
          description: An action is already in progress by your character.
        "491":
          description: Slot is empty.
        "497":
          description: Character inventory is full.
        "478":
          description: Missing item or insufficient quantity.
        "483":
          description: Character has no enough HP to unequip this item.
        "499":
          description: Character in cooldown.
      security:
      - JWTBearer: []
      summary: Action Unequip Item
      tags:
      - My characters
      x-content-type: application/json
      x-accepts:
      - application/json
  /my/{name}/action/use:
    post:
      description: Use an item as a consumable.
      operationId: action_use_item_my__name__action_use_post
      parameters:
      - description: Name of your character.
        explode: false
        in: path
        name: name
        required: true
        schema:
          description: Name of your character.
          pattern: "^[a-zA-Z0-9_-]+$"
          title: Character name
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SimpleItemSchema'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UseItemResponseSchema'
          description: The item has been successfully used.
        "404":
          description: Item not found.
        "498":
          description: Character not found.
        "499":
          description: Character in cooldown.
        "486":
          description: An action is already in progress by your character.
        "476":
          description: This item is not a consumable.
        "478":
          description: Missing item or insufficient quantity.
        "496":
          description: Character level is insufficient.
      security:
      - JWTBearer: []
      summary: Action Use Item
      tags:
      - My characters
      x-content-type: application/json
      x-accepts:
      - application/json
  /my/{name}/action/fight:
    post:
      description: Start a fight against a monster on the character's map.
      operationId: action_fight_my__name__action_fight_post
      parameters:
      - description: Name of your character.
        explode: false
        in: path
        name: name
        required: true
        schema:
          description: Name of your character.
          pattern: "^[a-zA-Z0-9_-]+$"
          title: Character name
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CharacterFightResponseSchema'
          description: The fight ended successfully.
        "498":
          description: Character not found.
        "499":
          description: Character in cooldown.
        "598":
          description: Monster not found on this map.
        "486":
          description: An action is already in progress by your character.
        "497":
          description: Character inventory is full.
      security:
      - JWTBearer: []
      summary: Action Fight
      tags:
      - My characters
      x-accepts:
      - application/json
  /my/{name}/action/gathering:
    post:
      description: Harvest a resource on the character's map.
      operationId: action_gathering_my__name__action_gathering_post
      parameters:
      - description: Name of your character.
        explode: false
        in: path
        name: name
        required: true
        schema:
          description: Name of your character.
          pattern: "^[a-zA-Z0-9_-]+$"
          title: Character name
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SkillResponseSchema'
          description: The resource has been successfully gathered.
        "498":
          description: Character not found.
        "499":
          description: Character in cooldown.
        "598":
          description: Resource not found on this map.
        "486":
          description: An action is already in progress by your character.
        "493":
          description: Not skill level required.
        "497":
          description: Character inventory is full.
      security:
      - JWTBearer: []
      summary: Action Gathering
      tags:
      - My characters
      x-accepts:
      - application/json
  /my/{name}/action/crafting:
    post:
      description: Crafting an item. The character must be on a map with a workshop.
      operationId: action_crafting_my__name__action_crafting_post
      parameters:
      - description: Name of your character.
        explode: false
        in: path
        name: name
        required: true
        schema:
          description: Name of your character.
          pattern: "^[a-zA-Z0-9_-]+$"
          title: Character name
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CraftingSchema'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SkillResponseSchema'
          description: The item was successfully crafted.
        "404":
          description: Craft not found.
        "598":
          description: Workshop not found on this map.
        "498":
          description: Character not found.
        "497":
          description: Character inventory is full.
        "499":
          description: Character in cooldown.
        "486":
          description: An action is already in progress by your character.
        "493":
          description: Not skill level required.
        "478":
          description: Missing item or insufficient quantity.
      security:
      - JWTBearer: []
      summary: Action Crafting
      tags:
      - My characters
      x-content-type: application/json
      x-accepts:
      - application/json
  /my/{name}/action/bank/deposit/gold:
    post:
      description: Deposit gold in a bank on the character's map.
      operationId: action_deposit_bank_gold_my__name__action_bank_deposit_gold_post
      parameters:
      - description: Name of your character.
        explode: false
        in: path
        name: name
        required: true
        schema:
          description: Name of your character.
          pattern: "^[a-zA-Z0-9_-]+$"
          title: Character name
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DepositWithdrawGoldSchema'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BankGoldTransactionResponseSchema'
          description: Golds successfully deposited in your bank.
        "598":
          description: Bank not found on this map.
        "492":
          description: Insufficient gold on your character.
        "498":
          description: Character not found.
        "499":
          description: Character in cooldown.
        "461":
          description: A transaction is already in progress with this item/your gold
            in your bank.
        "486":
          description: An action is already in progress by your character.
      security:
      - JWTBearer: []
      summary: Action Deposit Bank Gold
      tags:
      - My characters
      x-content-type: application/json
      x-accepts:
      - application/json
  /my/{name}/action/bank/deposit:
    post:
      description: Deposit an item in a bank on the character's map.
      operationId: action_deposit_bank_my__name__action_bank_deposit_post
      parameters:
      - description: Name of your character.
        explode: false
        in: path
        name: name
        required: true
        schema:
          description: Name of your character.
          pattern: "^[a-zA-Z0-9_-]+$"
          title: Character name
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SimpleItemSchema'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BankItemTransactionResponseSchema'
          description: Item successfully deposited in your bank.
        "598":
          description: Bank not found on this map.
        "404":
          description: Item not found.
        "461":
          description: A transaction is already in progress with this item/your gold
            in your bank.
        "498":
          description: Character not found.
        "499":
          description: Character in cooldown.
        "486":
          description: An action is already in progress by your character.
        "478":
          description: Missing item or insufficient quantity.
        "462":
          description: Your bank is full.
      security:
      - JWTBearer: []
      summary: Action Deposit Bank
      tags:
      - My characters
      x-content-type: application/json
      x-accepts:
      - application/json
  /my/{name}/action/bank/withdraw:
    post:
      description: Take an item from your bank and put it in the character's inventory.
      operationId: action_withdraw_bank_my__name__action_bank_withdraw_post
      parameters:
      - description: Name of your character.
        explode: false
        in: path
        name: name
        required: true
        schema:
          description: Name of your character.
          pattern: "^[a-zA-Z0-9_-]+$"
          title: Character name
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SimpleItemSchema'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BankItemTransactionResponseSchema'
          description: Item successfully withdraw from your bank.
        "404":
          description: Item not found.
        "498":
          description: Character not found.
        "499":
          description: Character in cooldown.
        "461":
          description: A transaction is already in progress with this item/your gold
            in your bank.
        "486":
          description: An action is already in progress by your character.
        "497":
          description: Character inventory is full.
        "598":
          description: Bank not found on this map.
        "478":
          description: Missing item or insufficient quantity.
      security:
      - JWTBearer: []
      summary: Action Withdraw Bank
      tags:
      - My characters
      x-content-type: application/json
      x-accepts:
      - application/json
  /my/{name}/action/bank/withdraw/gold:
    post:
      description: Withdraw gold from your bank.
      operationId: action_withdraw_bank_gold_my__name__action_bank_withdraw_gold_post
      parameters:
      - description: Name of your character.
        explode: false
        in: path
        name: name
        required: true
        schema:
          description: Name of your character.
          pattern: "^[a-zA-Z0-9_-]+$"
          title: Character name
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DepositWithdrawGoldSchema'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BankGoldTransactionResponseSchema'
          description: Golds successfully withdraw from your bank.
        "498":
          description: Character not found.
        "499":
          description: Character in cooldown.
        "461":
          description: A transaction is already in progress with this item/your gold
            in your bank.
        "486":
          description: An action is already in progress by your character.
        "598":
          description: Bank not found on this map.
        "460":
          description: Insufficient gold in your bank.
      security:
      - JWTBearer: []
      summary: Action Withdraw Bank Gold
      tags:
      - My characters
      x-content-type: application/json
      x-accepts:
      - application/json
  /my/{name}/action/bank/buy_expansion:
    post:
      description: Buy a 20 slots bank expansion.
      operationId: action_buy_bank_expansion_my__name__action_bank_buy_expansion_post
      parameters:
      - description: Name of your character.
        explode: false
        in: path
        name: name
        required: true
        schema:
          description: Name of your character.
          pattern: "^[a-zA-Z0-9_-]+$"
          title: Character name
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BankExtensionTransactionResponseSchema'
          description: Bank expansion successfully bought.
        "598":
          description: Bank not found on this map.
        "498":
          description: Character not found.
        "499":
          description: Character in cooldown.
        "486":
          description: An action is already in progress by your character.
        "492":
          description: Insufficient gold on your character.
      security:
      - JWTBearer: []
      summary: Action Buy Bank Expansion
      tags:
      - My characters
      x-accepts:
      - application/json
  /my/{name}/action/npc/buy:
    post:
      description: Buy an item from an NPC on the character's map.
      operationId: action_npc_buy_item_my__name__action_npc_buy_post
      parameters:
      - description: Name of your character.
        explode: false
        in: path
        name: name
        required: true
        schema:
          description: Name of your character.
          pattern: "^[a-zA-Z0-9_-]+$"
          title: Character name
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NpcMerchantBuySchema'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NpcMerchantTransactionResponseSchema'
          description: Item successfully bought from the NPC.
        "598":
          description: NPC not found on this map.
        "498":
          description: Character not found.
        "497":
          description: Character inventory is full.
        "499":
          description: Character in cooldown.
        "486":
          description: An action is already in progress by your character.
        "492":
          description: Insufficient gold on your character.
        "441":
          description: This item cannot be purchased.
        "404":
          description: Item not found.
      security:
      - JWTBearer: []
      summary: Action Npc Buy Item
      tags:
      - My characters
      x-content-type: application/json
      x-accepts:
      - application/json
  /my/{name}/action/npc/sell:
    post:
      description: Sell an item to an NPC on the character's map.
      operationId: action_npc_sell_item_my__name__action_npc_sell_post
      parameters:
      - description: Name of your character.
        explode: false
        in: path
        name: name
        required: true
        schema:
          description: Name of your character.
          pattern: "^[a-zA-Z0-9_-]+$"
          title: Character name
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NpcMerchantBuySchema'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NpcMerchantTransactionResponseSchema'
          description: Item successfully sold to the NPC.
        "598":
          description: NPC not found on this map.
        "498":
          description: Character not found.
        "497":
          description: Character inventory is full.
        "499":
          description: Character in cooldown.
        "486":
          description: An action is already in progress by your character.
        "478":
          description: Missing item or insufficient quantity.
        "442":
          description: This item cannot be sold.
        "404":
          description: Item not found.
      security:
      - JWTBearer: []
      summary: Action Npc Sell Item
      tags:
      - My characters
      x-content-type: application/json
      x-accepts:
      - application/json
  /my/{name}/action/recycling:
    post:
      description: Recycling an item. The character must be on a map with a workshop
        (only for equipments and weapons).
      operationId: action_recycling_my__name__action_recycling_post
      parameters:
      - description: Name of your character.
        explode: false
        in: path
        name: name
        required: true
        schema:
          description: Name of your character.
          pattern: "^[a-zA-Z0-9_-]+$"
          title: Character name
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RecyclingSchema'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecyclingResponseSchema'
          description: The items were successfully recycled.
        "404":
          description: Item not found.
        "598":
          description: Workshop not found on this map.
        "498":
          description: Character not found.
        "497":
          description: Character inventory is full.
        "499":
          description: Character in cooldown.
        "486":
          description: An action is already in progress by your character.
        "493":
          description: Not skill level required.
        "478":
          description: Missing item or insufficient quantity.
        "473":
          description: This item cannot be recycled.
      security:
      - JWTBearer: []
      summary: Action Recycling
      tags:
      - My characters
      x-content-type: application/json
      x-accepts:
      - application/json
  /my/{name}/action/grandexchange/buy:
    post:
      description: Buy an item at the Grand Exchange on the character's map.
      operationId: action_ge_buy_item_my__name__action_grandexchange_buy_post
      parameters:
      - description: Name of your character.
        explode: false
        in: path
        name: name
        required: true
        schema:
          description: Name of your character.
          pattern: "^[a-zA-Z0-9_-]+$"
          title: Character name
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GEBuyOrderSchema'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GETransactionResponseSchema'
          description: Item successfully buy from the Grand Exchange.
        "598":
          description: Grand Exchange not found on this map.
        "498":
          description: Character not found.
        "497":
          description: Character inventory is full.
        "499":
          description: Character in cooldown.
        "436":
          description: A transaction is already in progress on this order by a another
            character.
        "486":
          description: An action is already in progress by your character.
        "492":
          description: Insufficient gold on your character.
        "434":
          description: This offer does not contain as many items.
        "435":
          description: You can't buy to yourself.
        "404":
          description: Order not found.
      security:
      - JWTBearer: []
      summary: Action Ge Buy Item
      tags:
      - My characters
      x-content-type: application/json
      x-accepts:
      - application/json
  /my/{name}/action/grandexchange/sell:
    post:
      description: "Create a sell order at the Grand Exchange on the character's map.\
        \ Please note there is a 3% listing tax, charged at the time of posting, on\
        \ the total price."
      operationId: action_ge_create_sell_order_my__name__action_grandexchange_sell_post
      parameters:
      - description: Name of your character.
        explode: false
        in: path
        name: name
        required: true
        schema:
          description: Name of your character.
          pattern: "^[a-zA-Z0-9_-]+$"
          title: Character name
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GEOrderCreationrSchema'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GECreateOrderTransactionResponseSchema'
          description: The sell order has been successfully created.
        "498":
          description: Character not found.
        "499":
          description: Character in cooldown.
        "486":
          description: An action is already in progress by your character.
        "404":
          description: Item not found.
        "478":
          description: Missing item or insufficient quantity.
        "492":
          description: Insufficient gold on your character.
        "433":
          description: You can't create more than 100 orders at the same time.
        "437":
          description: This item cannot be sold.
        "598":
          description: Grand Exchange not found on this map.
      security:
      - JWTBearer: []
      summary: Action Ge Create Sell Order
      tags:
      - My characters
      x-content-type: application/json
      x-accepts:
      - application/json
  /my/{name}/action/grandexchange/cancel:
    post:
      description: Cancel a sell order at the Grand Exchange on the character's map.
      operationId: action_ge_cancel_sell_order_my__name__action_grandexchange_cancel_post
      parameters:
      - description: Name of your character.
        explode: false
        in: path
        name: name
        required: true
        schema:
          description: Name of your character.
          pattern: "^[a-zA-Z0-9_-]+$"
          title: Character name
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GECancelOrderSchema'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GETransactionResponseSchema'
          description: Your sell order has been successfully cancelled.
        "598":
          description: Grand Exchange not found on this map.
        "498":
          description: Character not found.
        "497":
          description: Character inventory is full.
        "499":
          description: Character in cooldown.
        "436":
          description: A transaction is already in progress on this order by a another
            character.
        "486":
          description: An action is already in progress by your character.
        "438":
          description: You can't cancel an order that is not yours.
        "404":
          description: Order not found.
      security:
      - JWTBearer: []
      summary: Action Ge Cancel Sell Order
      tags:
      - My characters
      x-content-type: application/json
      x-accepts:
      - application/json
  /my/{name}/action/task/complete:
    post:
      description: Complete a task.
      operationId: action_complete_task_my__name__action_task_complete_post
      parameters:
      - description: Name of your character.
        explode: false
        in: path
        name: name
        required: true
        schema:
          description: Name of your character.
          pattern: "^[a-zA-Z0-9_-]+$"
          title: Character name
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RewardDataResponseSchema'
          description: The task has been successfully completed.
        "498":
          description: Character not found.
        "499":
          description: Character in cooldown.
        "486":
          description: An action is already in progress by your character.
        "598":
          description: Tasks Master not found on this map.
        "488":
          description: Character has not completed the task.
        "487":
          description: Character has no task.
        "497":
          description: Character inventory is full.
      security:
      - JWTBearer: []
      summary: Action Complete Task
      tags:
      - My characters
      x-accepts:
      - application/json
  /my/{name}/action/task/exchange:
    post:
      description: Exchange 6 tasks coins for a random reward. Rewards are exclusive
        items or resources.
      operationId: action_task_exchange_my__name__action_task_exchange_post
      parameters:
      - description: Name of your character.
        explode: false
        in: path
        name: name
        required: true
        schema:
          description: Name of your character.
          pattern: "^[a-zA-Z0-9_-]+$"
          title: Character name
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RewardDataResponseSchema'
          description: The tasks coins have been successfully exchanged.
        "498":
          description: Character not found.
        "499":
          description: Character in cooldown.
        "486":
          description: An action is already in progress by your character.
        "598":
          description: Tasks Master not found on this map.
        "478":
          description: Missing item or insufficient quantity.
        "497":
          description: Character inventory is full.
      security:
      - JWTBearer: []
      summary: Action Task Exchange
      tags:
      - My characters
      x-accepts:
      - application/json
  /my/{name}/action/task/new:
    post:
      description: Accepting a new task.
      operationId: action_accept_new_task_my__name__action_task_new_post
      parameters:
      - description: Name of your character.
        explode: false
        in: path
        name: name
        required: true
        schema:
          description: Name of your character.
          pattern: "^[a-zA-Z0-9_-]+$"
          title: Character name
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskResponseSchema'
          description: New task successfully accepted.
        "498":
          description: Character not found.
        "499":
          description: Character in cooldown.
        "486":
          description: An action is already in progress by your character.
        "598":
          description: Tasks Master not found on this map.
        "489":
          description: Character already has a task.
      security:
      - JWTBearer: []
      summary: Action Accept New Task
      tags:
      - My characters
      x-accepts:
      - application/json
  /my/{name}/action/task/trade:
    post:
      description: Trading items with a Tasks Master.
      operationId: action_task_trade_my__name__action_task_trade_post
      parameters:
      - description: Name of your character.
        explode: false
        in: path
        name: name
        required: true
        schema:
          description: Name of your character.
          pattern: "^[a-zA-Z0-9_-]+$"
          title: Character name
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SimpleItemSchema'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskTradeResponseSchema'
          description: You have successfully trade items to a Tasks Master.
        "498":
          description: Character not found.
        "499":
          description: Character in cooldown.
        "486":
          description: An action is already in progress by your character.
        "598":
          description: Tasks Master not found on this map.
        "475":
          description: Character have already completed the task or are trying to
            trade too many items.
        "474":
          description: Character does not have this task.
        "478":
          description: Missing item or insufficient quantity.
      security:
      - JWTBearer: []
      summary: Action Task Trade
      tags:
      - My characters
      x-content-type: application/json
      x-accepts:
      - application/json
  /my/{name}/action/task/cancel:
    post:
      description: Cancel a task for 1 tasks coin.
      operationId: action_task_cancel_my__name__action_task_cancel_post
      parameters:
      - description: Name of your character.
        explode: false
        in: path
        name: name
        required: true
        schema:
          description: Name of your character.
          pattern: "^[a-zA-Z0-9_-]+$"
          title: Character name
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskCancelledResponseSchema'
          description: The task has been successfully cancelled.
        "498":
          description: Character not found.
        "499":
          description: Character in cooldown.
        "486":
          description: An action is already in progress by your character.
        "598":
          description: Tasks Master not found on this map.
        "478":
          description: Missing item or insufficient quantity.
      security:
      - JWTBearer: []
      summary: Action Task Cancel
      tags:
      - My characters
      x-accepts:
      - application/json
  /my/{name}/action/delete:
    post:
      description: Delete an item from your character's inventory.
      operationId: action_delete_item_my__name__action_delete_post
      parameters:
      - description: Name of your character.
        explode: false
        in: path
        name: name
        required: true
        schema:
          description: Name of your character.
          pattern: "^[a-zA-Z0-9_-]+$"
          title: Character name
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SimpleItemSchema'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteItemResponseSchema'
          description: Item successfully deleted from your character.
        "498":
          description: Character not found.
        "499":
          description: Character in cooldown.
        "486":
          description: An action is already in progress by your character.
        "478":
          description: Missing item or insufficient quantity.
      security:
      - JWTBearer: []
      summary: Action Delete Item
      tags:
      - My characters
      x-content-type: application/json
      x-accepts:
      - application/json
  /my/logs:
    get:
      description: History of the last 100 actions of all your characters.
      operationId: get_all_characters_logs_my_logs_get
      parameters:
      - description: Page number
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          description: Page number
          minimum: 1
          title: Page
          type: integer
        style: form
      - description: Page size
        explode: true
        in: query
        name: size
        required: false
        schema:
          default: 50
          description: Page size
          maximum: 100
          minimum: 1
          title: Size
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataPage_LogSchema_'
          description: Successfully fetched logs.
        "404":
          description: Logs not found.
        "498":
          description: Character not found.
      security:
      - JWTBearer: []
      summary: Get All Characters Logs
      tags:
      - My characters
      x-accepts:
      - application/json
  /my/characters:
    get:
      description: "List of your characters. This endpoint is deprecated and will\
        \ be removed in a future version. Please use accounts/{account}/characters."
      operationId: get_my_characters_my_characters_get
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MyCharactersListSchema'
          description: Successfully fetched characters.
      security:
      - JWTBearer: []
      summary: Get My Characters
      tags:
      - My characters
      x-accepts:
      - application/json
  /accounts/create:
    post:
      operationId: create_account_accounts_create_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddAccountSchema'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseSchema'
          description: Account created successfully.
        "456":
          description: Username already used.
        "457":
          description: Email already used.
      summary: Create Account
      tags:
      - Accounts
      x-content-type: application/json
      x-accepts:
      - application/json
  /accounts/{account}/achievements:
    get:
      description: Retrieve the achievements of a account.
      operationId: get_account_achievements_accounts__account__achievements_get
      parameters:
      - description: The character name.
        explode: false
        in: path
        name: account
        required: true
        schema:
          description: The character name.
          pattern: "^[a-zA-Z0-9_-]+$"
          title: Account name
          type: string
        style: simple
      - description: Type of achievements.
        explode: true
        in: query
        name: type
        required: false
        schema:
          allOf:
          - $ref: '#/components/schemas/AchievementType_a-zA-Z0-9_-_____'
          description: Type of achievements.
          title: Type
        style: form
      - description: Filter by completed achievements.
        explode: true
        in: query
        name: completed
        required: false
        schema:
          description: Filter by completed achievements.
          title: Completed
          type: boolean
        style: form
      - description: Page number
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          description: Page number
          minimum: 1
          title: Page
          type: integer
        style: form
      - description: Page size
        explode: true
        in: query
        name: size
        required: false
        schema:
          default: 50
          description: Page size
          maximum: 100
          minimum: 1
          title: Size
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataPage_AccountAchievementSchema_'
          description: Successfully fetched achievements.
        "404":
          description: Account not found.
      summary: Get Account Achievements
      tags:
      - Accounts
      x-accepts:
      - application/json
  /accounts/{account}/characters:
    get:
      description: Account character lists.
      operationId: get_account_characters_accounts__account__characters_get
      parameters:
      - description: The character name.
        explode: false
        in: path
        name: account
        required: true
        schema:
          description: The character name.
          pattern: "^[a-zA-Z0-9_-]+$"
          title: Account name
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CharactersListSchema'
          description: Successfully fetched characters.
      summary: Get Account Characters
      tags:
      - Accounts
      x-accepts:
      - application/json
  /accounts/{account}:
    get:
      description: Retrieve the details of a character.
      operationId: get_account_accounts__account__get
      parameters:
      - description: The account name.
        explode: false
        in: path
        name: account
        required: true
        schema:
          description: The account name.
          pattern: "^[a-zA-Z0-9_-]+$"
          title: Account name
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountDetailsSchema'
          description: Successfully fetched account.
        "404":
          description: Account not found.
      summary: Get Account
      tags:
      - Accounts
      x-accepts:
      - application/json
  /achievements:
    get:
      description: List of all achievements.
      operationId: get_all_achievements_achievements_get
      parameters:
      - description: Type of achievements.
        explode: true
        in: query
        name: type
        required: false
        schema:
          allOf:
          - $ref: '#/components/schemas/AchievementType_a-zA-Z0-9_-_____'
          description: Type of achievements.
          title: Type
        style: form
      - description: Page number
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          description: Page number
          minimum: 1
          title: Page
          type: integer
        style: form
      - description: Page size
        explode: true
        in: query
        name: size
        required: false
        schema:
          default: 50
          description: Page size
          maximum: 100
          minimum: 1
          title: Size
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataPage_AchievementSchema_'
          description: Successfully fetched achievements.
      summary: Get All Achievements
      tags:
      - Achievements
      x-accepts:
      - application/json
  /achievements/{code}:
    get:
      description: Retrieve the details of a achievement.
      operationId: get_achievement_achievements__code__get
      parameters:
      - description: The code of the achievement.
        explode: false
        in: path
        name: code
        required: true
        schema:
          description: The code of the achievement.
          pattern: "^[a-zA-Z0-9_-]+$"
          title: achievement code
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AchievementResponseSchema'
          description: Successfully fetched achievement.
        "404":
          description: Achievement not found.
      summary: Get Achievement
      tags:
      - Achievements
      x-accepts:
      - application/json
  /badges:
    get:
      description: List of all badges.
      operationId: get_all_badges_badges_get
      parameters:
      - description: Page number
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          description: Page number
          minimum: 1
          title: Page
          type: integer
        style: form
      - description: Page size
        explode: true
        in: query
        name: size
        required: false
        schema:
          default: 50
          description: Page size
          maximum: 100
          minimum: 1
          title: Size
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataPage_BadgeSchema_'
          description: Successfully fetched badges.
      summary: Get All Badges
      tags:
      - Badges
      x-accepts:
      - application/json
  /badges/{code}:
    get:
      description: Retrieve the details of a badge.
      operationId: get_badge_badges__code__get
      parameters:
      - description: The code of the achievement.
        explode: false
        in: path
        name: code
        required: true
        schema:
          description: The code of the achievement.
          pattern: "^[a-zA-Z0-9_-]+$"
          title: achievement code
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadgeResponseSchema'
          description: Successfully fetched badge.
        "404":
          description: badge not found.
      summary: Get Badge
      tags:
      - Badges
      x-accepts:
      - application/json
  /characters/create:
    post:
      description: Create new character on your account. You can create up to 5 characters.
      operationId: create_character_characters_create_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddCharacterSchema'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CharacterResponseSchema'
          description: Successfully created character.
        "494":
          description: Name already used.
        "495":
          description: Maximum characters reached on your account.
      security:
      - JWTBearer: []
      summary: Create Character
      tags:
      - Characters
      x-content-type: application/json
      x-accepts:
      - application/json
  /characters/delete:
    post:
      description: Delete character on your account.
      operationId: delete_character_characters_delete_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteCharacterSchema'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CharacterResponseSchema'
          description: Successfully deleted character.
        "498":
          description: Character not found.
      security:
      - JWTBearer: []
      summary: Delete Character
      tags:
      - Characters
      x-content-type: application/json
      x-accepts:
      - application/json
  /characters/{name}:
    get:
      description: Retrieve the details of a character.
      operationId: get_character_characters__name__get
      parameters:
      - description: The character name.
        explode: false
        in: path
        name: name
        required: true
        schema:
          description: The character name.
          pattern: "^[a-zA-Z0-9_-]+$"
          title: Character name
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CharacterResponseSchema'
          description: Successfully fetched character.
        "404":
          description: Character not found.
      summary: Get Character
      tags:
      - Characters
      x-accepts:
      - application/json
  /effects:
    get:
      description: "List of all effects. Effects are used by equipment, tools, runes,\
        \ consumables and monsters. An effect is an action that produces an effect\
        \ on the game."
      operationId: get_all_effects_effects_get
      parameters:
      - description: Page number
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          description: Page number
          minimum: 1
          title: Page
          type: integer
        style: form
      - description: Page size
        explode: true
        in: query
        name: size
        required: false
        schema:
          default: 50
          description: Page size
          maximum: 100
          minimum: 1
          title: Size
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataPage_EffectSchema_'
          description: Successfully fetched effects.
      summary: Get All Effects
      tags:
      - Effects
      x-accepts:
      - application/json
  /effects/{code}:
    get:
      description: Retrieve the details of a badge.
      operationId: get_effect_effects__code__get
      parameters:
      - description: The code of the achievement.
        explode: false
        in: path
        name: code
        required: true
        schema:
          description: The code of the achievement.
          pattern: "^[a-zA-Z0-9_-]+$"
          title: achievement code
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EffectResponseSchema'
          description: Successfully fetched effect.
        "404":
          description: effect not found.
      summary: Get Effect
      tags:
      - Effects
      x-accepts:
      - application/json
  /events/active:
    get:
      description: Fetch active events details.
      operationId: get_all_active_events_events_active_get
      parameters:
      - description: Page number
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          description: Page number
          minimum: 1
          title: Page
          type: integer
        style: form
      - description: Page size
        explode: true
        in: query
        name: size
        required: false
        schema:
          default: 50
          description: Page size
          maximum: 100
          minimum: 1
          title: Size
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataPage_ActiveEventSchema_'
          description: Successfully fetched events details.
      summary: Get All Active Events
      tags:
      - Events
      x-accepts:
      - application/json
  /events:
    get:
      description: Fetch events details.
      operationId: get_all_events_events_get
      parameters:
      - description: Type of event.
        explode: true
        in: query
        name: type
        required: false
        schema:
          allOf:
          - $ref: '#/components/schemas/MapContentType_a-zA-Z0-9_-_____'
          description: Type of event.
          title: Type
        style: form
      - description: Page number
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          description: Page number
          minimum: 1
          title: Page
          type: integer
        style: form
      - description: Page size
        explode: true
        in: query
        name: size
        required: false
        schema:
          default: 50
          description: Page size
          maximum: 100
          minimum: 1
          title: Size
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataPage_EventSchema_'
          description: Successfully fetched events details.
      summary: Get All Events
      tags:
      - Events
      x-accepts:
      - application/json
  /grandexchange/history/{code}:
    get:
      description: Fetch the sales history of the item for the last 7 days.
      operationId: get_ge_sell_history_grandexchange_history__code__get
      parameters:
      - description: The code of the item.
        explode: false
        in: path
        name: code
        required: true
        schema:
          description: The code of the item.
          pattern: "^[a-zA-Z0-9_-]+$"
          title: Item code
          type: string
        style: simple
      - description: The seller (account name) of the item.
        explode: true
        in: query
        name: seller
        required: false
        schema:
          description: The seller (account name) of the item.
          pattern: "^[a-zA-Z0-9_-]+$"
          title: Seller
          type: string
        style: form
      - description: The buyer (account name) of the item.
        explode: true
        in: query
        name: buyer
        required: false
        schema:
          description: The buyer (account name) of the item.
          pattern: "^[a-zA-Z0-9_-]+$"
          title: Buyer
          type: string
        style: form
      - description: Page number
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          description: Page number
          minimum: 1
          title: Page
          type: integer
        style: form
      - description: Page size
        explode: true
        in: query
        name: size
        required: false
        schema:
          default: 50
          description: Page size
          maximum: 100
          minimum: 1
          title: Size
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataPage_GeOrderHistorySchema_'
          description: Successfully fetched orders history.
        "404":
          description: Item not found.
      summary: Get Ge Sell History
      tags:
      - Grand Exchange
      x-accepts:
      - application/json
  /grandexchange/orders:
    get:
      description: Fetch all sell orders.
      operationId: get_ge_sell_orders_grandexchange_orders_get
      parameters:
      - description: The code of the item.
        explode: true
        in: query
        name: code
        required: false
        schema:
          description: The code of the item.
          pattern: "^[a-zA-Z0-9_-]+$"
          title: Item code
          type: string
        style: form
      - description: The seller (account name) of the item.
        explode: true
        in: query
        name: seller
        required: false
        schema:
          description: The seller (account name) of the item.
          pattern: "^[a-zA-Z0-9_-]+$"
          title: Seller
          type: string
        style: form
      - description: Page number
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          description: Page number
          minimum: 1
          title: Page
          type: integer
        style: form
      - description: Page size
        explode: true
        in: query
        name: size
        required: false
        schema:
          default: 50
          description: Page size
          maximum: 100
          minimum: 1
          title: Size
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataPage_GEOrderSchema_'
          description: Successfully fetched orders details.
      summary: Get Ge Sell Orders
      tags:
      - Grand Exchange
      x-accepts:
      - application/json
  /grandexchange/orders/{id}:
    get:
      description: Retrieve the sell order of a item.
      operationId: get_ge_sell_order_grandexchange_orders__id__get
      parameters:
      - description: The id of the order.
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: The id of the order.
          pattern: "^[a-zA-Z0-9_-]+$"
          title: Order id
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GEOrderReponseSchema'
          description: Successfully fetched order.
        "404":
          description: Order not found.
      summary: Get Ge Sell Order
      tags:
      - Grand Exchange
      x-accepts:
      - application/json
  /items:
    get:
      description: Fetch items details.
      operationId: get_all_items_items_get
      parameters:
      - description: Minimum level items.
        explode: true
        in: query
        name: min_level
        required: false
        schema:
          description: Minimum level items.
          minimum: 0
          title: Minimum level
          type: integer
        style: form
      - description: Maximum level items.
        explode: true
        in: query
        name: max_level
        required: false
        schema:
          description: Maximum level items.
          minimum: 0
          title: Maximum level
          type: integer
        style: form
      - description: Name of the item.
        explode: true
        in: query
        name: name
        required: false
        schema:
          description: Name of the item.
          pattern: "^[a-zA-Z0-9_-]+(\\s[a-zA-Z0-9_-]+)*\\s?$"
          title: Item name
          type: string
        style: form
      - description: Type of items.
        explode: true
        in: query
        name: type
        required: false
        schema:
          allOf:
          - $ref: '#/components/schemas/ItemType_a-zA-Z0-9_-_____'
          description: Type of items.
          title: Type
        style: form
      - description: Skill to craft items.
        explode: true
        in: query
        name: craft_skill
        required: false
        schema:
          allOf:
          - $ref: '#/components/schemas/CraftSkill_a-zA-Z0-9_-_____'
          description: Skill to craft items.
          title: Crafting skill
        style: form
      - description: Item code of items used as material for crafting.
        explode: true
        in: query
        name: craft_material
        required: false
        schema:
          description: Item code of items used as material for crafting.
          pattern: "^[a-zA-Z0-9_-]+$"
          title: Crafting material
          type: string
        style: form
      - description: Page number
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          description: Page number
          minimum: 1
          title: Page
          type: integer
        style: form
      - description: Page size
        explode: true
        in: query
        name: size
        required: false
        schema:
          default: 50
          description: Page size
          maximum: 100
          minimum: 1
          title: Size
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataPage_ItemSchema_'
          description: Fetch items details.
      summary: Get All Items
      tags:
      - Items
      x-accepts:
      - application/json
  /items/{code}:
    get:
      description: Retrieve the details of a item.
      operationId: get_item_items__code__get
      parameters:
      - description: The code of the item.
        explode: false
        in: path
        name: code
        required: true
        schema:
          description: The code of the item.
          pattern: "^[a-zA-Z0-9_-]+$"
          title: Item code
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemResponseSchema'
          description: Successfully fetched item.
        "404":
          description: Item not found.
      summary: Get Item
      tags:
      - Items
      x-accepts:
      - application/json
  /leaderboard/characters:
    get:
      description: Fetch leaderboard details.
      operationId: get_characters_leaderboard_leaderboard_characters_get
      parameters:
      - description: Default sort by combat total XP.
        explode: true
        in: query
        name: sort
        required: false
        schema:
          allOf:
          - $ref: '#/components/schemas/CharacterLeaderboardType_a-zA-Z0-9_-_____'
          description: Default sort by combat total XP.
          title: Sort
        style: form
      - description: Find a character by name.
        explode: true
        in: query
        name: name
        required: false
        schema:
          description: Find a character by name.
          pattern: "^[a-zA-Z0-9_-]+(\\s[a-zA-Z0-9_-]+)*\\s?$"
          title: Character name
          type: string
        style: form
      - description: Page number
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          description: Page number
          minimum: 1
          title: Page
          type: integer
        style: form
      - description: Page size
        explode: true
        in: query
        name: size
        required: false
        schema:
          default: 50
          description: Page size
          maximum: 100
          minimum: 1
          title: Size
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataPage_CharacterLeaderboardSchema_'
          description: Successfully fetched leaderboard.
      summary: Get Characters Leaderboard
      tags:
      - Leaderboard
      x-accepts:
      - application/json
  /leaderboard/accounts:
    get:
      description: Fetch leaderboard details.
      operationId: get_accounts_leaderboard_leaderboard_accounts_get
      parameters:
      - description: Default sort by achievements points.
        explode: true
        in: query
        name: sort
        required: false
        schema:
          allOf:
          - $ref: '#/components/schemas/AccountLeaderboardType_a-zA-Z0-9_-_____'
          description: Default sort by achievements points.
          title: Sort
        style: form
      - description: Find a account by name.
        explode: true
        in: query
        name: name
        required: false
        schema:
          description: Find a account by name.
          pattern: "^[a-zA-Z0-9_-]+(\\s[a-zA-Z0-9_-]+)*\\s?$"
          title: Account name
          type: string
        style: form
      - description: Page number
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          description: Page number
          minimum: 1
          title: Page
          type: integer
        style: form
      - description: Page size
        explode: true
        in: query
        name: size
        required: false
        schema:
          default: 50
          description: Page size
          maximum: 100
          minimum: 1
          title: Size
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataPage_AccountLeaderboardSchema_'
          description: Successfully fetched leaderboard.
      summary: Get Accounts Leaderboard
      tags:
      - Leaderboard
      x-accepts:
      - application/json
  /maps:
    get:
      description: Fetch maps details.
      operationId: get_all_maps_maps_get
      parameters:
      - description: Type of content on the map.
        explode: true
        in: query
        name: content_type
        required: false
        schema:
          allOf:
          - $ref: '#/components/schemas/MapContentType_a-zA-Z0-9_-_____'
          description: Type of content on the map.
          title: Content type
        style: form
      - description: Content code on the map.
        explode: true
        in: query
        name: content_code
        required: false
        schema:
          description: Content code on the map.
          pattern: "^[a-zA-Z0-9_-]+$"
          title: Content code
          type: string
        style: form
      - description: Page number
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          description: Page number
          minimum: 1
          title: Page
          type: integer
        style: form
      - description: Page size
        explode: true
        in: query
        name: size
        required: false
        schema:
          default: 50
          description: Page size
          maximum: 100
          minimum: 1
          title: Size
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataPage_MapSchema_'
          description: Successfully fetched maps details.
      summary: Get All Maps
      tags:
      - Maps
      x-accepts:
      - application/json
  /maps/{x}/{y}:
    get:
      description: Retrieve the details of a map.
      operationId: get_map_maps__x___y__get
      parameters:
      - description: The position x of the map.
        explode: false
        in: path
        name: x
        required: true
        schema:
          description: The position x of the map.
          title: Position X
          type: integer
        style: simple
      - description: The position X of the map.
        explode: false
        in: path
        name: "y"
        required: true
        schema:
          description: The position X of the map.
          title: Position Y
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MapResponseSchema'
          description: Successfully fetched map.
        "404":
          description: Map not found.
      summary: Get Map
      tags:
      - Maps
      x-accepts:
      - application/json
  /monsters:
    get:
      description: Fetch monsters details.
      operationId: get_all_monsters_monsters_get
      parameters:
      - description: Monster minimum level.
        explode: true
        in: query
        name: min_level
        required: false
        schema:
          description: Monster minimum level.
          minimum: 0
          title: Minimum level
          type: integer
        style: form
      - description: Monster maximum level.
        explode: true
        in: query
        name: max_level
        required: false
        schema:
          description: Monster maximum level.
          minimum: 0
          title: Maximum level
          type: integer
        style: form
      - description: Item code of the drop.
        explode: true
        in: query
        name: drop
        required: false
        schema:
          description: Item code of the drop.
          pattern: "^[a-zA-Z0-9_-]+$"
          title: Drop
          type: string
        style: form
      - description: Page number
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          description: Page number
          minimum: 1
          title: Page
          type: integer
        style: form
      - description: Page size
        explode: true
        in: query
        name: size
        required: false
        schema:
          default: 50
          description: Page size
          maximum: 100
          minimum: 1
          title: Size
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataPage_MonsterSchema_'
          description: Successfully fetched monsters details.
      summary: Get All Monsters
      tags:
      - Monsters
      x-accepts:
      - application/json
  /monsters/{code}:
    get:
      description: Retrieve the details of a monster.
      operationId: get_monster_monsters__code__get
      parameters:
      - description: The code of the monster.
        explode: false
        in: path
        name: code
        required: true
        schema:
          description: The code of the monster.
          pattern: "^[a-zA-Z0-9_-]+$"
          title: Monster code
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MonsterResponseSchema'
          description: Successfully fetched monster.
        "404":
          description: Monster not found.
      summary: Get Monster
      tags:
      - Monsters
      x-accepts:
      - application/json
  /npcs:
    get:
      description: Fetch NPCs details.
      operationId: get_all_npcs_npcs_get
      parameters:
      - description: The type of the NPC.
        explode: true
        in: query
        name: type
        required: false
        schema:
          allOf:
          - $ref: '#/components/schemas/NPCType_a-zA-Z0-9_-_____'
          description: The type of the NPC.
          title: NPC type
        style: form
      - description: Page number
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          description: Page number
          minimum: 1
          title: Page
          type: integer
        style: form
      - description: Page size
        explode: true
        in: query
        name: size
        required: false
        schema:
          default: 50
          description: Page size
          maximum: 100
          minimum: 1
          title: Size
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataPage_NPCSchema_'
          description: Successfully fetched NPCs details.
      summary: Get All Npcs
      tags:
      - NPCs
      x-accepts:
      - application/json
  /npcs/{code}:
    get:
      description: Retrieve the details of a NPC.
      operationId: get_npc_npcs__code__get
      parameters:
      - description: The code of the NPC.
        explode: false
        in: path
        name: code
        required: true
        schema:
          description: The code of the NPC.
          pattern: "^[a-zA-Z0-9_-]+$"
          title: NPC code
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NPCResponseSchema'
          description: Successfully fetched NPC.
        "404":
          description: NPC not found.
      summary: Get Npc
      tags:
      - NPCs
      x-accepts:
      - application/json
  /npcs/{code}/items:
    get:
      description: "Retrieve the items list of a NPC. If the NPC has items to buy\
        \ or sell, they will be displayed."
      operationId: get_npc_items_npcs__code__items_get
      parameters:
      - description: The code of the NPC.
        explode: false
        in: path
        name: code
        required: true
        schema:
          description: The code of the NPC.
          pattern: "^[a-zA-Z0-9_-]+$"
          title: NPC code
          type: string
        style: simple
      - description: Page number
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          description: Page number
          minimum: 1
          title: Page
          type: integer
        style: form
      - description: Page size
        explode: true
        in: query
        name: size
        required: false
        schema:
          default: 50
          description: Page size
          maximum: 100
          minimum: 1
          title: Size
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataPage_NPCItem_'
          description: Successfully fetched NPC.
        "404":
          description: NPC not found.
      summary: Get Npc Items
      tags:
      - NPCs
      x-accepts:
      - application/json
  /resources:
    get:
      description: Fetch resources details.
      operationId: get_all_resources_resources_get
      parameters:
      - description: Skill minimum level.
        explode: true
        in: query
        name: min_level
        required: false
        schema:
          description: Skill minimum level.
          minimum: 0
          title: Minimum level
          type: integer
        style: form
      - description: Skill maximum level.
        explode: true
        in: query
        name: max_level
        required: false
        schema:
          description: Skill maximum level.
          minimum: 0
          title: Maximum level
          type: integer
        style: form
      - description: The code of the skill.
        explode: true
        in: query
        name: skill
        required: false
        schema:
          allOf:
          - $ref: '#/components/schemas/GatheringSkill_a-zA-Z0-9_-_____'
          description: The code of the skill.
          title: Skill code
        style: form
      - description: Item code of the drop.
        explode: true
        in: query
        name: drop
        required: false
        schema:
          description: Item code of the drop.
          pattern: "^[a-zA-Z0-9_-]+$"
          title: Drop
          type: string
        style: form
      - description: Page number
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          description: Page number
          minimum: 1
          title: Page
          type: integer
        style: form
      - description: Page size
        explode: true
        in: query
        name: size
        required: false
        schema:
          default: 50
          description: Page size
          maximum: 100
          minimum: 1
          title: Size
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataPage_ResourceSchema_'
          description: Successfully fetched resources details.
      summary: Get All Resources
      tags:
      - Resources
      x-accepts:
      - application/json
  /resources/{code}:
    get:
      description: Retrieve the details of a resource.
      operationId: get_resource_resources__code__get
      parameters:
      - description: The code of the resource.
        example: copper_rocks
        explode: false
        in: path
        name: code
        required: true
        schema:
          description: The code of the resource.
          pattern: "^[a-zA-Z0-9_-]+$"
          title: Resource code
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceResponseSchema'
          description: Successfully fetched resource.
        "404":
          description: Resource not found.
      summary: Get Resource
      tags:
      - Resources
      x-accepts:
      - application/json
  /tasks/list:
    get:
      description: Fetch the list of all tasks.
      operationId: get_all_tasks_tasks_list_get
      parameters:
      - description: Minimum level.
        explode: true
        in: query
        name: min_level
        required: false
        schema:
          description: Minimum level.
          minimum: 0
          title: Minimum level
          type: integer
        style: form
      - description: Maximum level.
        explode: true
        in: query
        name: max_level
        required: false
        schema:
          description: Maximum level.
          minimum: 0
          title: Maximum level
          type: integer
        style: form
      - description: The code of the skill.
        explode: true
        in: query
        name: skill
        required: false
        schema:
          allOf:
          - $ref: '#/components/schemas/Skill_a-zA-Z0-9_-_____'
          description: The code of the skill.
          title: Skill code
        style: form
      - description: The type of tasks.
        explode: true
        in: query
        name: type
        required: false
        schema:
          allOf:
          - $ref: '#/components/schemas/TaskType_a-zA-Z0-9_-_____'
          description: The type of tasks.
          title: Type
        style: form
      - description: Page number
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          description: Page number
          minimum: 1
          title: Page
          type: integer
        style: form
      - description: Page size
        explode: true
        in: query
        name: size
        required: false
        schema:
          default: 50
          description: Page size
          maximum: 100
          minimum: 1
          title: Size
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataPage_TaskFullSchema_'
          description: Successfully fetched tasks details.
      summary: Get All Tasks
      tags:
      - Tasks
      x-accepts:
      - application/json
  /tasks/list/{code}:
    get:
      description: Retrieve the details of a task.
      operationId: get_task_tasks_list__code__get
      parameters:
      - description: The code of the task.
        explode: false
        in: path
        name: code
        required: true
        schema:
          description: The code of the task.
          pattern: "^[a-zA-Z0-9_-]+$"
          title: Task code
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskFullResponseSchema'
          description: Successfully fetched task.
        "404":
          description: Task not found.
      summary: Get Task
      tags:
      - Tasks
      x-accepts:
      - application/json
  /tasks/rewards:
    get:
      description: "Fetch the list of all tasks rewards. To obtain these rewards,\
        \ you must exchange 6 task coins with a tasks master."
      operationId: get_all_tasks_rewards_tasks_rewards_get
      parameters:
      - description: Page number
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          description: Page number
          minimum: 1
          title: Page
          type: integer
        style: form
      - description: Page size
        explode: true
        in: query
        name: size
        required: false
        schema:
          default: 50
          description: Page size
          maximum: 100
          minimum: 1
          title: Size
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataPage_DropRateSchema_'
          description: Successfully fetched tasks rewards details.
      summary: Get All Tasks Rewards
      tags:
      - Tasks
      x-accepts:
      - application/json
  /tasks/rewards/{code}:
    get:
      description: Retrieve the details of a tasks reward.
      operationId: get_tasks_reward_tasks_rewards__code__get
      parameters:
      - description: The code of the tasks reward.
        explode: false
        in: path
        name: code
        required: true
        schema:
          description: The code of the tasks reward.
          pattern: "^[a-zA-Z0-9_-]+$"
          title: Tasks reward code
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RewardResponseSchema'
          description: Successfully fetched tasks reward.
        "404":
          description: Tasks reward not found.
      summary: Get Tasks Reward
      tags:
      - Tasks
      x-accepts:
      - application/json
  /token:
    post:
      description: Use your account as HTTPBasic Auth to generate your token to use
        the API. You can also generate your token directly on the website.
      operationId: generate_token_token_post
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenResponseSchema'
          description: Token generated successfully
        "455":
          description: Token generation failed.
      security:
      - HTTPBasic: []
      summary: Generate Token
      tags:
      - Token
      x-accepts:
      - application/json
  /:
    get:
      description: Return the status of the game server.
      operationId: get_status__get
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusResponseSchema'
          description: Successful Response
      summary: Get Status
      x-accepts:
      - application/json
components:
  schemas:
    AccountAchievementSchema:
      example:
        completed_at: 2000-01-23T04:56:07.000+00:00
        total: 6
        current: 1
        code: code
        name: name
        description: description
        type: ""
        rewards: ""
        points: 0
        target: target
      properties:
        name:
          description: Name of the achievement.
          title: Name
          type: string
        code:
          description: 'Code of the achievement. '
          title: Code
          type: string
        description:
          description: Description of the achievement.
          title: Description
          type: string
        points:
          description: Points of the achievement. Used for the leaderboard.
          title: Points
          type: integer
        type:
          allOf:
          - $ref: '#/components/schemas/AchievementType'
          description: Type of achievement.
        target:
          nullable: true
          type: string
        total:
          description: Total to do.
          title: Total
          type: integer
        rewards:
          allOf:
          - $ref: '#/components/schemas/AchievementRewardsSchema'
          description: Rewards.
        current:
          description: Current progress.
          title: Current
          type: integer
        completed_at:
          format: date-time
          nullable: true
          type: string
      required:
      - code
      - completed_at
      - current
      - description
      - name
      - points
      - rewards
      - target
      - total
      - type
      title: AccountAchievementSchema
    AccountDetails:
      example:
        badges:
        - ""
        - ""
        subscribed: true
        achievements_points: 0
        ban_reason: ban_reason
        banned: true
        username: username
        status: ""
      properties:
        username:
          description: Username.
          title: Username
          type: string
        subscribed:
          description: Subscribed for the current season.
          title: Subscribed
          type: boolean
        status:
          allOf:
          - $ref: '#/components/schemas/AccountStatus'
          description: Member status.
        badges:
          description: Account badges.
          items: {}
          type: array
        achievements_points:
          description: Achievement points.
          title: Achievements Points
          type: integer
        banned:
          description: Banned.
          title: Banned
          type: boolean
        ban_reason:
          description: Ban reason.
          title: Ban Reason
          type: string
      required:
      - achievements_points
      - banned
      - status
      - subscribed
      - username
      title: AccountDetails
    AccountDetailsSchema:
      example:
        data:
          badges:
          - ""
          - ""
          subscribed: true
          achievements_points: 0
          ban_reason: ban_reason
          banned: true
          username: username
          status: ""
      properties:
        data:
          $ref: '#/components/schemas/AccountDetails'
      required:
      - data
      title: AccountDetailsSchema
    AccountLeaderboardSchema:
      example:
        gold: 1
        achievements_points: 6
        position: 0
        account: account
        status: ""
      properties:
        position:
          description: Position in the leaderboard.
          title: Position
          type: integer
        account:
          description: Account name.
          title: Account
          type: string
        status:
          allOf:
          - $ref: '#/components/schemas/AccountStatus'
          description: Member status.
        achievements_points:
          description: Achievements points.
          title: Achievements Points
          type: integer
        gold:
          description: Gold in the account.
          title: Gold
          type: integer
      required:
      - account
      - achievements_points
      - gold
      - position
      - status
      title: AccountLeaderboardSchema
    AccountLeaderboardType:
      enum:
      - achievements_points
      - gold
      title: AccountLeaderboardType
      type: string
    AccountLeaderboardType_a-zA-Z0-9_-_____:
      $ref: '#/components/schemas/AccountLeaderboardType'
    AccountStatus:
      enum:
      - standard
      - founder
      - gold_founder
      - vip_founder
      title: AccountStatus
      type: string
    AchievementResponseSchema:
      example:
        data:
          total: 6
          code: code
          name: name
          description: description
          type: ""
          rewards: ""
          points: 0
          target: target
      properties:
        data:
          $ref: '#/components/schemas/AchievementSchema'
      required:
      - data
      title: AchievementResponseSchema
    AchievementRewardsSchema:
      properties:
        gold:
          description: Gold rewards.
          title: Gold
          type: integer
      required:
      - gold
      title: AchievementRewardsSchema
    AchievementSchema:
      example:
        total: 6
        code: code
        name: name
        description: description
        type: ""
        rewards: ""
        points: 0
        target: target
      properties:
        name:
          description: Name of the achievement.
          title: Name
          type: string
        code:
          description: 'Code of the achievement. '
          title: Code
          type: string
        description:
          description: Description of the achievement.
          title: Description
          type: string
        points:
          description: Points of the achievement. Used for the leaderboard.
          title: Points
          type: integer
        type:
          allOf:
          - $ref: '#/components/schemas/AchievementType'
          description: Type of achievement.
        target:
          nullable: true
          type: string
        total:
          description: Total to do.
          title: Total
          type: integer
        rewards:
          allOf:
          - $ref: '#/components/schemas/AchievementRewardsSchema'
          description: Rewards.
      required:
      - code
      - description
      - name
      - points
      - rewards
      - target
      - total
      - type
      title: AchievementSchema
    AchievementType:
      enum:
      - combat_kill
      - combat_drop
      - combat_level
      - gathering
      - crafting
      - recycling
      - task
      - other
      - use
      title: AchievementType
      type: string
    AchievementType_a-zA-Z0-9_-_____:
      $ref: '#/components/schemas/AchievementType'
    ActionType:
      enum:
      - movement
      - fight
      - crafting
      - gathering
      - buy_ge
      - sell_ge
      - buy_npc
      - sell_npc
      - cancel_ge
      - delete_item
      - deposit
      - withdraw
      - deposit_gold
      - withdraw_gold
      - equip
      - unequip
      - task
      - christmas_exchange
      - recycling
      - rest
      - use
      - buy_bank_expansion
      title: ActionType
      type: string
    ActiveEventSchema:
      example:
        duration: 0
        code: code
        name: name
        created_at: 2000-01-23T04:56:07.000+00:00
        expiration: 2000-01-23T04:56:07.000+00:00
        previous_skin: previous_skin
        map: ""
      properties:
        name:
          description: Name of the event.
          title: Name
          type: string
        code:
          description: Code of the event.
          title: Code
          type: string
        map:
          allOf:
          - $ref: '#/components/schemas/MapSchema'
          description: Map of the event.
        previous_skin:
          description: Previous map skin.
          title: Previous Skin
          type: string
        duration:
          description: Duration in minutes.
          title: Duration
          type: integer
        expiration:
          description: Expiration datetime.
          format: date-time
          title: Expiration
          type: string
        created_at:
          description: Start datetime.
          format: date-time
          title: Created At
          type: string
      required:
      - code
      - created_at
      - duration
      - expiration
      - map
      - name
      - previous_skin
      title: ActiveEventSchema
    AddAccountSchema:
      example:
        password: password
        email: email
        username: username
      properties:
        username:
          description: Your desired username.
          maxLength: 32
          minLength: 6
          pattern: "^[a-zA-Z0-9_-]+$"
          title: Username
          type: string
        password:
          description: Your password.
          maxLength: 50
          minLength: 5
          pattern: "^[^\\s]+$"
          title: Password
          type: string
        email:
          format: email
          title: Email
          type: string
      required:
      - password
      - username
      title: AddAccountSchema
    AddCharacterSchema:
      example:
        name: name
        skin: ""
      properties:
        name:
          description: Your desired character name. It's unique and all players can
            see it.
          maxLength: 12
          minLength: 3
          pattern: "^[a-zA-Z0-9_-]+$"
          title: Name
          type: string
        skin:
          allOf:
          - $ref: '#/components/schemas/CharacterSkin'
          description: Your desired skin.
      required:
      - name
      - skin
      title: AddCharacterSchema
    AnnouncementSchema:
      example:
        created_at: 2000-01-23T04:56:07.000+00:00
        message: message
      properties:
        message:
          description: Announcement text.
          title: Message
          type: string
        created_at:
          description: Datetime of the announcement.
          format: date-time
          title: Created At
          type: string
      required:
      - message
      title: AnnouncementSchema
    BadgeConditionSchema:
      example:
        code: code
        quantity: 6
      properties:
        code:
          description: Code of the condition.
          title: Code
          type: string
        quantity:
          nullable: true
          type: integer
      required:
      - code
      - quantity
      title: BadgeConditionSchema
    BadgeResponseSchema:
      example:
        data:
          code: code
          season: 0
          description: description
          conditions:
          - code: code
            quantity: 6
          - code: code
            quantity: 6
      properties:
        data:
          $ref: '#/components/schemas/BadgeSchema'
      required:
      - data
      title: BadgeResponseSchema
    BadgeSchema:
      example:
        code: code
        season: 0
        description: description
        conditions:
        - code: code
          quantity: 6
        - code: code
          quantity: 6
      properties:
        code:
          description: Code of the badge. This is the badge's unique identifier (ID).
          title: Code
          type: string
        season:
          nullable: true
          type: integer
        description:
          description: Description of the badge.
          title: Description
          type: string
        conditions:
          description: Conditions to get the badge.
          items:
            $ref: '#/components/schemas/BadgeConditionSchema'
          type: array
      required:
      - code
      - conditions
      - description
      title: BadgeSchema
    BankExtensionSchema:
      properties:
        price:
          description: Price of the bank extension.
          minimum: 0.0
          title: Price
          type: integer
      required:
      - price
      title: BankExtensionSchema
    BankExtensionTransactionResponseSchema:
      example:
        data:
          character: ""
          cooldown: ""
          transaction: ""
      properties:
        data:
          $ref: '#/components/schemas/BankExtensionTransactionSchema'
      required:
      - data
      title: BankExtensionTransactionResponseSchema
    BankExtensionTransactionSchema:
      example:
        character: ""
        cooldown: ""
        transaction: ""
      properties:
        cooldown:
          allOf:
          - $ref: '#/components/schemas/CooldownSchema'
          description: Cooldown details.
        transaction:
          allOf:
          - $ref: '#/components/schemas/BankExtensionSchema'
          description: Transaction details.
        character:
          allOf:
          - $ref: '#/components/schemas/CharacterSchema'
          description: Player details.
      required:
      - character
      - cooldown
      - transaction
      title: BankExtensionTransactionSchema
    BankGoldTransactionResponseSchema:
      example:
        data:
          bank: ""
          character: ""
          cooldown: ""
      properties:
        data:
          $ref: '#/components/schemas/BankGoldTransactionSchema'
      required:
      - data
      title: BankGoldTransactionResponseSchema
    BankGoldTransactionSchema:
      example:
        bank: ""
        character: ""
        cooldown: ""
      properties:
        cooldown:
          allOf:
          - $ref: '#/components/schemas/CooldownSchema'
          description: Cooldown details.
        bank:
          allOf:
          - $ref: '#/components/schemas/GoldSchema'
          description: Bank details.
        character:
          allOf:
          - $ref: '#/components/schemas/CharacterSchema'
          description: Player details.
      required:
      - bank
      - character
      - cooldown
      title: BankGoldTransactionSchema
    BankItemTransactionResponseSchema:
      example:
        data:
          item: ""
          bank:
          - code: code
            quantity: 1
          - code: code
            quantity: 1
          character: ""
          cooldown: ""
      properties:
        data:
          $ref: '#/components/schemas/BankItemTransactionSchema'
      required:
      - data
      title: BankItemTransactionResponseSchema
    BankItemTransactionSchema:
      example:
        item: ""
        bank:
        - code: code
          quantity: 1
        - code: code
          quantity: 1
        character: ""
        cooldown: ""
      properties:
        cooldown:
          allOf:
          - $ref: '#/components/schemas/CooldownSchema'
          description: Cooldown details.
        item:
          allOf:
          - $ref: '#/components/schemas/ItemSchema'
          description: Item details.
        bank:
          description: Items in your banks.
          items:
            $ref: '#/components/schemas/SimpleItemSchema'
          type: array
        character:
          allOf:
          - $ref: '#/components/schemas/CharacterSchema'
          description: Player details.
      required:
      - bank
      - character
      - cooldown
      - item
      title: BankItemTransactionSchema
    BankResponseSchema:
      example:
        data:
          gold: 0
          slots: 0
          next_expansion_cost: 0
          expansions: 0
      properties:
        data:
          $ref: '#/components/schemas/BankSchema'
      required:
      - data
      title: BankResponseSchema
    BankSchema:
      example:
        gold: 0
        slots: 0
        next_expansion_cost: 0
        expansions: 0
      properties:
        slots:
          description: Maximum slots in your bank.
          minimum: 0.0
          title: Slots
          type: integer
        expansions:
          description: Bank expansions.
          minimum: 0.0
          title: Expansions
          type: integer
        next_expansion_cost:
          description: Next expansion cost.
          minimum: 0.0
          title: Next Expansion Cost
          type: integer
        gold:
          description: Quantity of gold in your bank.
          minimum: 0.0
          title: Gold
          type: integer
      required:
      - expansions
      - gold
      - next_expansion_cost
      - slots
      title: BankSchema
    BlockedHitsSchema:
      properties:
        fire:
          description: The amount of fire hits blocked.
          title: Fire
          type: integer
        earth:
          description: The amount of earth hits blocked.
          title: Earth
          type: integer
        water:
          description: The amount of water hits blocked.
          title: Water
          type: integer
        air:
          description: The amount of air hits blocked.
          title: Air
          type: integer
        total:
          description: The amount of total hits blocked.
          title: Total
          type: integer
      required:
      - air
      - earth
      - fire
      - total
      - water
      title: BlockedHitsSchema
    ChangePassword:
      example:
        new_password: new_password
        current_password: current_password
      properties:
        current_password:
          description: Your password.
          maxLength: 50
          minLength: 5
          pattern: "^[^\\s]+$"
          title: Current Password
          type: string
        new_password:
          description: New password.
          maxLength: 50
          minLength: 5
          pattern: "^[^\\s]+$"
          title: New Password
          type: string
      required:
      - current_password
      - new_password
      title: ChangePassword
    CharacterFightDataSchema:
      example:
        character: ""
        cooldown: ""
        fight: ""
      properties:
        cooldown:
          allOf:
          - $ref: '#/components/schemas/CooldownSchema'
          description: Cooldown details.
        fight:
          allOf:
          - $ref: '#/components/schemas/FightSchema'
          description: Fight details.
        character:
          allOf:
          - $ref: '#/components/schemas/CharacterSchema'
          description: Player details.
      required:
      - character
      - cooldown
      - fight
      title: CharacterFightDataSchema
    CharacterFightResponseSchema:
      example:
        data:
          character: ""
          cooldown: ""
          fight: ""
      properties:
        data:
          $ref: '#/components/schemas/CharacterFightDataSchema'
      required:
      - data
      title: CharacterFightResponseSchema
    CharacterLeaderboardSchema:
      example:
        weaponcrafting_total_xp: 4
        gearcrafting_level: 7
        jewelrycrafting_total_xp: 1
        total_xp: 1
        mining_level: 5
        level: 6
        skin: skin
        alchemy_level: 1
        fishing_total_xp: 3
        alchemy_total_xp: 4
        gold: 5
        name: name
        mining_total_xp: 5
        fishing_level: 9
        woodcutting_level: 2
        gearcrafting_total_xp: 1
        jewelrycrafting_level: 1
        position: 0
        weaponcrafting_level: 2
        cooking_total_xp: 7
        account: account
        status: ""
        woodcutting_total_xp: 7
        cooking_level: 6
      properties:
        position:
          description: Position in the leaderboard.
          title: Position
          type: integer
        name:
          description: Character name.
          title: Name
          type: string
        account:
          description: Account name.
          title: Account
          type: string
        status:
          allOf:
          - $ref: '#/components/schemas/AccountStatus'
          description: Member status.
        skin:
          description: Character skin code.
          title: Skin
          type: string
        level:
          description: Combat level.
          title: Level
          type: integer
        total_xp:
          description: Total XP of your character.
          title: Total Xp
          type: integer
        mining_level:
          description: Mining level.
          title: Mining Level
          type: integer
        mining_total_xp:
          description: Mining total xp.
          title: Mining Total Xp
          type: integer
        woodcutting_level:
          description: Woodcutting level.
          title: Woodcutting Level
          type: integer
        woodcutting_total_xp:
          description: Woodcutting total xp.
          title: Woodcutting Total Xp
          type: integer
        fishing_level:
          description: Fishing level.
          title: Fishing Level
          type: integer
        fishing_total_xp:
          description: Fishing total xp.
          title: Fishing Total Xp
          type: integer
        weaponcrafting_level:
          description: Weaponcrafting level.
          title: Weaponcrafting Level
          type: integer
        weaponcrafting_total_xp:
          description: Weaponcrafting total xp.
          title: Weaponcrafting Total Xp
          type: integer
        gearcrafting_level:
          description: Gearcrafting level.
          title: Gearcrafting Level
          type: integer
        gearcrafting_total_xp:
          description: Gearcrafting total xp.
          title: Gearcrafting Total Xp
          type: integer
        jewelrycrafting_level:
          description: Jewelrycrafting level.
          title: Jewelrycrafting Level
          type: integer
        jewelrycrafting_total_xp:
          description: Jewelrycrafting total xp.
          title: Jewelrycrafting Total Xp
          type: integer
        cooking_level:
          description: Cooking level.
          title: Cooking Level
          type: integer
        cooking_total_xp:
          description: Cooking total xp.
          title: Cooking Total Xp
          type: integer
        alchemy_level:
          description: Alchemy level.
          title: Alchemy Level
          type: integer
        alchemy_total_xp:
          description: Alchemy total xp.
          title: Alchemy Total Xp
          type: integer
        gold:
          description: The numbers of gold on this character.
          title: Gold
          type: integer
      required:
      - account
      - alchemy_level
      - alchemy_total_xp
      - cooking_level
      - cooking_total_xp
      - fishing_level
      - fishing_total_xp
      - gearcrafting_level
      - gearcrafting_total_xp
      - gold
      - jewelrycrafting_level
      - jewelrycrafting_total_xp
      - level
      - mining_level
      - mining_total_xp
      - name
      - position
      - skin
      - status
      - total_xp
      - weaponcrafting_level
      - weaponcrafting_total_xp
      - woodcutting_level
      - woodcutting_total_xp
      title: CharacterLeaderboardSchema
    CharacterLeaderboardType:
      enum:
      - combat
      - woodcutting
      - mining
      - fishing
      - weaponcrafting
      - gearcrafting
      - jewelrycrafting
      - cooking
      - alchemy
      title: CharacterLeaderboardType
      type: string
    CharacterLeaderboardType_a-zA-Z0-9_-_____:
      $ref: '#/components/schemas/CharacterLeaderboardType'
    CharacterMovementDataSchema:
      example:
        character: ""
        cooldown: ""
        destination: ""
      properties:
        cooldown:
          allOf:
          - $ref: '#/components/schemas/CooldownSchema'
          description: Cooldown details
        destination:
          allOf:
          - $ref: '#/components/schemas/MapSchema'
          description: Destination details.
        character:
          allOf:
          - $ref: '#/components/schemas/CharacterSchema'
          description: Character details.
      required:
      - character
      - cooldown
      - destination
      title: CharacterMovementDataSchema
    CharacterMovementResponseSchema:
      example:
        data:
          character: ""
          cooldown: ""
          destination: ""
      properties:
        data:
          $ref: '#/components/schemas/CharacterMovementDataSchema'
      required:
      - data
      title: CharacterMovementResponseSchema
    CharacterResponseSchema:
      example:
        data:
          attack_fire: 3
          amulet_slot: amulet_slot
          dmg_water: 8
          prospecting: 3
          mining_max_xp: 9
          alchemy_level: 3
          hp: 2
          utility2_slot: utility2_slot
          mining_xp: 7
          critical_strike: 5
          alchemy_xp: 6
          cooldown: 0
          utility1_slot: utility1_slot
          body_armor_slot: body_armor_slot
          gearcrafting_level: 1
          fishing_xp: 1
          shield_slot: shield_slot
          level: 0
          weaponcrafting_xp: 6
          cooking_max_xp: 6
          res_water: 7
          attack_water: 0
          task: task
          gearcrafting_xp: 4
          artifact2_slot: artifact2_slot
          res_fire: 3
          name: name
          max_xp: 1
          jewelrycrafting_xp: 9
          task_total: 4
          weaponcrafting_max_xp: 7
          alchemy_max_xp: 1
          skin: ""
          attack_air: 7
          helmet_slot: helmet_slot
          res_air: 5
          artifact1_slot: artifact1_slot
          ring1_slot: ring1_slot
          max_hp: 6
          inventory:
          - code: code
            quantity: 0
            slot: 9
          - code: code
            quantity: 0
            slot: 9
          speed: 5
          dmg_air: 7
          wisdom: 6
          gold: 5
          boots_slot: boots_slot
          utility2_slot_quantity: 0
          fishing_level: 7
          gearcrafting_max_xp: 5
          woodcutting_level: 3
          jewelrycrafting_level: 9
          leg_armor_slot: leg_armor_slot
          woodcutting_max_xp: 4
          attack_earth: 7
          jewelrycrafting_max_xp: 6
          cooking_level: 8
          dmg_earth: 4
          artifact3_slot: artifact3_slot
          mining_level: 2
          cooldown_expiration: 2000-01-23T04:56:07.000+00:00
          cooking_xp: 9
          woodcutting_xp: 2
          haste: 6
          ring2_slot: ring2_slot
          task_progress: 1
          weapon_slot: weapon_slot
          inventory_max_items: 7
          bag_slot: bag_slot
          xp: 6
          x: 3
          fishing_max_xp: 1
          "y": 4
          rune_slot: rune_slot
          weaponcrafting_level: 1
          utility1_slot_quantity: 0
          task_type: task_type
          dmg_fire: 0
          res_earth: 3
          account: account
          dmg: 6
      properties:
        data:
          $ref: '#/components/schemas/CharacterSchema'
      required:
      - data
      title: CharacterResponseSchema
    CharacterRestDataSchema:
      example:
        character: ""
        hp_restored: 0
        cooldown: ""
      properties:
        cooldown:
          allOf:
          - $ref: '#/components/schemas/CooldownSchema'
          description: Cooldown details
        hp_restored:
          description: The amount of HP restored.
          title: Hp Restored
          type: integer
        character:
          allOf:
          - $ref: '#/components/schemas/CharacterSchema'
          description: Character details.
      required:
      - character
      - cooldown
      - hp_restored
      title: CharacterRestDataSchema
    CharacterRestResponseSchema:
      example:
        data:
          character: ""
          hp_restored: 0
          cooldown: ""
      properties:
        data:
          $ref: '#/components/schemas/CharacterRestDataSchema'
      required:
      - data
      title: CharacterRestResponseSchema
    CharacterSchema:
      example:
        attack_fire: 3
        amulet_slot: amulet_slot
        dmg_water: 8
        prospecting: 3
        mining_max_xp: 9
        alchemy_level: 3
        hp: 2
        utility2_slot: utility2_slot
        mining_xp: 7
        critical_strike: 5
        alchemy_xp: 6
        cooldown: 0
        utility1_slot: utility1_slot
        body_armor_slot: body_armor_slot
        gearcrafting_level: 1
        fishing_xp: 1
        shield_slot: shield_slot
        level: 0
        weaponcrafting_xp: 6
        cooking_max_xp: 6
        res_water: 7
        attack_water: 0
        task: task
        gearcrafting_xp: 4
        artifact2_slot: artifact2_slot
        res_fire: 3
        name: name
        max_xp: 1
        jewelrycrafting_xp: 9
        task_total: 4
        weaponcrafting_max_xp: 7
        alchemy_max_xp: 1
        skin: ""
        attack_air: 7
        helmet_slot: helmet_slot
        res_air: 5
        artifact1_slot: artifact1_slot
        ring1_slot: ring1_slot
        max_hp: 6
        inventory:
        - code: code
          quantity: 0
          slot: 9
        - code: code
          quantity: 0
          slot: 9
        speed: 5
        dmg_air: 7
        wisdom: 6
        gold: 5
        boots_slot: boots_slot
        utility2_slot_quantity: 0
        fishing_level: 7
        gearcrafting_max_xp: 5
        woodcutting_level: 3
        jewelrycrafting_level: 9
        leg_armor_slot: leg_armor_slot
        woodcutting_max_xp: 4
        attack_earth: 7
        jewelrycrafting_max_xp: 6
        cooking_level: 8
        dmg_earth: 4
        artifact3_slot: artifact3_slot
        mining_level: 2
        cooldown_expiration: 2000-01-23T04:56:07.000+00:00
        cooking_xp: 9
        woodcutting_xp: 2
        haste: 6
        ring2_slot: ring2_slot
        task_progress: 1
        weapon_slot: weapon_slot
        inventory_max_items: 7
        bag_slot: bag_slot
        xp: 6
        x: 3
        fishing_max_xp: 1
        "y": 4
        rune_slot: rune_slot
        weaponcrafting_level: 1
        utility1_slot_quantity: 0
        task_type: task_type
        dmg_fire: 0
        res_earth: 3
        account: account
        dmg: 6
      properties:
        name:
          description: Name of the character.
          title: Name
          type: string
        account:
          description: Account name.
          title: Account
          type: string
        skin:
          allOf:
          - $ref: '#/components/schemas/CharacterSkin'
          description: Character skin code.
        level:
          description: Combat level.
          title: Level
          type: integer
        xp:
          description: The current xp level of the combat level.
          title: Xp
          type: integer
        max_xp:
          description: XP required to level up the character.
          title: Max Xp
          type: integer
        gold:
          description: The numbers of gold on this character.
          title: Gold
          type: integer
        speed:
          description: "*Not available, on the roadmap. Character movement speed."
          title: Speed
          type: integer
        mining_level:
          description: Mining level.
          title: Mining Level
          type: integer
        mining_xp:
          description: The current xp level of the Mining skill.
          title: Mining Xp
          type: integer
        mining_max_xp:
          description: Mining XP required to level up the skill.
          title: Mining Max Xp
          type: integer
        woodcutting_level:
          description: Woodcutting level.
          title: Woodcutting Level
          type: integer
        woodcutting_xp:
          description: The current xp level of the Woodcutting skill.
          title: Woodcutting Xp
          type: integer
        woodcutting_max_xp:
          description: Woodcutting XP required to level up the skill.
          title: Woodcutting Max Xp
          type: integer
        fishing_level:
          description: Fishing level.
          title: Fishing Level
          type: integer
        fishing_xp:
          description: The current xp level of the Fishing skill.
          title: Fishing Xp
          type: integer
        fishing_max_xp:
          description: Fishing XP required to level up the skill.
          title: Fishing Max Xp
          type: integer
        weaponcrafting_level:
          description: Weaponcrafting level.
          title: Weaponcrafting Level
          type: integer
        weaponcrafting_xp:
          description: The current xp level of the Weaponcrafting skill.
          title: Weaponcrafting Xp
          type: integer
        weaponcrafting_max_xp:
          description: Weaponcrafting XP required to level up the skill.
          title: Weaponcrafting Max Xp
          type: integer
        gearcrafting_level:
          description: Gearcrafting level.
          title: Gearcrafting Level
          type: integer
        gearcrafting_xp:
          description: The current xp level of the Gearcrafting skill.
          title: Gearcrafting Xp
          type: integer
        gearcrafting_max_xp:
          description: Gearcrafting XP required to level up the skill.
          title: Gearcrafting Max Xp
          type: integer
        jewelrycrafting_level:
          description: Jewelrycrafting level.
          title: Jewelrycrafting Level
          type: integer
        jewelrycrafting_xp:
          description: The current xp level of the Jewelrycrafting skill.
          title: Jewelrycrafting Xp
          type: integer
        jewelrycrafting_max_xp:
          description: Jewelrycrafting XP required to level up the skill.
          title: Jewelrycrafting Max Xp
          type: integer
        cooking_level:
          description: The current xp level of the Cooking skill.
          title: Cooking Level
          type: integer
        cooking_xp:
          description: Cooking XP.
          title: Cooking Xp
          type: integer
        cooking_max_xp:
          description: Cooking XP required to level up the skill.
          title: Cooking Max Xp
          type: integer
        alchemy_level:
          description: Alchemy level.
          title: Alchemy Level
          type: integer
        alchemy_xp:
          description: Alchemy XP.
          title: Alchemy Xp
          type: integer
        alchemy_max_xp:
          description: Alchemy XP required to level up the skill.
          title: Alchemy Max Xp
          type: integer
        hp:
          description: Character actual HP.
          title: Hp
          type: integer
        max_hp:
          description: Character max HP.
          title: Max Hp
          type: integer
        haste:
          description: '*Increase speed attack (reduce fight cooldown)'
          title: Haste
          type: integer
        critical_strike:
          description: '% Critical strike. Critical strikes adds 50% extra damage
            to an attack (1.5x).'
          title: Critical Strike
          type: integer
        wisdom:
          description: Wisdom increases the amount of XP gained from fights (1% extra
            per 10 wisdom).
          title: Wisdom
          type: integer
        prospecting:
          description: Prospecting increases the chances of getting better loot (1%
            extra per 10 PP).
          title: Prospecting
          type: integer
        attack_fire:
          description: Fire attack.
          title: Attack Fire
          type: integer
        attack_earth:
          description: Earth attack.
          title: Attack Earth
          type: integer
        attack_water:
          description: Water attack.
          title: Attack Water
          type: integer
        attack_air:
          description: Air attack.
          title: Attack Air
          type: integer
        dmg:
          description: '% Damage. Damage increases your attack in all elements.'
          title: Dmg
          type: integer
        dmg_fire:
          description: '% Fire damage. Damage increases your fire attack.'
          title: Dmg Fire
          type: integer
        dmg_earth:
          description: '% Earth damage. Damage increases your earth attack.'
          title: Dmg Earth
          type: integer
        dmg_water:
          description: '% Water damage. Damage increases your water attack.'
          title: Dmg Water
          type: integer
        dmg_air:
          description: '% Air damage. Damage increases your air attack.'
          title: Dmg Air
          type: integer
        res_fire:
          description: '% Fire resistance. Reduces fire attack.'
          title: Res Fire
          type: integer
        res_earth:
          description: '% Earth resistance. Reduces earth attack.'
          title: Res Earth
          type: integer
        res_water:
          description: '% Water resistance. Reduces water attack.'
          title: Res Water
          type: integer
        res_air:
          description: '% Air resistance. Reduces air attack.'
          title: Res Air
          type: integer
        x:
          description: Character x coordinate.
          title: X
          type: integer
        "y":
          description: Character y coordinate.
          title: "Y"
          type: integer
        cooldown:
          description: Cooldown in seconds.
          title: Cooldown
          type: integer
        cooldown_expiration:
          description: Datetime Cooldown expiration.
          format: date-time
          title: Cooldown Expiration
          type: string
        weapon_slot:
          description: Weapon slot.
          title: Weapon Slot
          type: string
        rune_slot:
          description: Rune slot.
          title: Rune Slot
          type: string
        shield_slot:
          description: Shield slot.
          title: Shield Slot
          type: string
        helmet_slot:
          description: Helmet slot.
          title: Helmet Slot
          type: string
        body_armor_slot:
          description: Body armor slot.
          title: Body Armor Slot
          type: string
        leg_armor_slot:
          description: Leg armor slot.
          title: Leg Armor Slot
          type: string
        boots_slot:
          description: Boots slot.
          title: Boots Slot
          type: string
        ring1_slot:
          description: Ring 1 slot.
          title: Ring1 Slot
          type: string
        ring2_slot:
          description: Ring 2 slot.
          title: Ring2 Slot
          type: string
        amulet_slot:
          description: Amulet slot.
          title: Amulet Slot
          type: string
        artifact1_slot:
          description: Artifact 1 slot.
          title: Artifact1 Slot
          type: string
        artifact2_slot:
          description: Artifact 2 slot.
          title: Artifact2 Slot
          type: string
        artifact3_slot:
          description: Artifact 3 slot.
          title: Artifact3 Slot
          type: string
        utility1_slot:
          description: Utility 1 slot.
          title: Utility1 Slot
          type: string
        utility1_slot_quantity:
          description: Utility 1 quantity.
          minimum: 0.0
          title: Utility1 Slot Quantity
          type: integer
        utility2_slot:
          description: Utility 2 slot.
          title: Utility2 Slot
          type: string
        utility2_slot_quantity:
          description: Utility 2 quantity.
          minimum: 0.0
          title: Utility2 Slot Quantity
          type: integer
        bag_slot:
          description: Bag slot.
          title: Bag Slot
          type: string
        task:
          description: Task in progress.
          title: Task
          type: string
        task_type:
          description: Task type.
          title: Task Type
          type: string
        task_progress:
          description: Task progression.
          title: Task Progress
          type: integer
        task_total:
          description: Task total objective.
          title: Task Total
          type: integer
        inventory_max_items:
          description: Inventory max items.
          title: Inventory Max Items
          type: integer
        inventory:
          description: List of inventory slots.
          items:
            $ref: '#/components/schemas/InventorySlot'
          type: array
      required:
      - account
      - alchemy_level
      - alchemy_max_xp
      - alchemy_xp
      - amulet_slot
      - artifact1_slot
      - artifact2_slot
      - artifact3_slot
      - attack_air
      - attack_earth
      - attack_fire
      - attack_water
      - bag_slot
      - body_armor_slot
      - boots_slot
      - cooking_level
      - cooking_max_xp
      - cooking_xp
      - cooldown
      - critical_strike
      - dmg
      - dmg_air
      - dmg_earth
      - dmg_fire
      - dmg_water
      - fishing_level
      - fishing_max_xp
      - fishing_xp
      - gearcrafting_level
      - gearcrafting_max_xp
      - gearcrafting_xp
      - gold
      - haste
      - helmet_slot
      - hp
      - inventory_max_items
      - jewelrycrafting_level
      - jewelrycrafting_max_xp
      - jewelrycrafting_xp
      - leg_armor_slot
      - level
      - max_hp
      - max_xp
      - mining_level
      - mining_max_xp
      - mining_xp
      - name
      - prospecting
      - res_air
      - res_earth
      - res_fire
      - res_water
      - ring1_slot
      - ring2_slot
      - rune_slot
      - shield_slot
      - skin
      - speed
      - task
      - task_progress
      - task_total
      - task_type
      - utility1_slot
      - utility1_slot_quantity
      - utility2_slot
      - utility2_slot_quantity
      - weapon_slot
      - weaponcrafting_level
      - weaponcrafting_max_xp
      - weaponcrafting_xp
      - wisdom
      - woodcutting_level
      - woodcutting_max_xp
      - woodcutting_xp
      - x
      - xp
      - "y"
      title: CharacterSchema
    CharacterSkin:
      enum:
      - men1
      - men2
      - men3
      - women1
      - women2
      - women3
      title: CharacterSkin
      type: string
    CharactersListSchema:
      example:
        data:
        - attack_fire: 3
          amulet_slot: amulet_slot
          dmg_water: 8
          prospecting: 3
          mining_max_xp: 9
          alchemy_level: 3
          hp: 2
          utility2_slot: utility2_slot
          mining_xp: 7
          critical_strike: 5
          alchemy_xp: 6
          cooldown: 0
          utility1_slot: utility1_slot
          body_armor_slot: body_armor_slot
          gearcrafting_level: 1
          fishing_xp: 1
          shield_slot: shield_slot
          level: 0
          weaponcrafting_xp: 6
          cooking_max_xp: 6
          res_water: 7
          attack_water: 0
          task: task
          gearcrafting_xp: 4
          artifact2_slot: artifact2_slot
          res_fire: 3
          name: name
          max_xp: 1
          jewelrycrafting_xp: 9
          task_total: 4
          weaponcrafting_max_xp: 7
          alchemy_max_xp: 1
          skin: ""
          attack_air: 7
          helmet_slot: helmet_slot
          res_air: 5
          artifact1_slot: artifact1_slot
          ring1_slot: ring1_slot
          max_hp: 6
          inventory:
          - code: code
            quantity: 0
            slot: 9
          - code: code
            quantity: 0
            slot: 9
          speed: 5
          dmg_air: 7
          wisdom: 6
          gold: 5
          boots_slot: boots_slot
          utility2_slot_quantity: 0
          fishing_level: 7
          gearcrafting_max_xp: 5
          woodcutting_level: 3
          jewelrycrafting_level: 9
          leg_armor_slot: leg_armor_slot
          woodcutting_max_xp: 4
          attack_earth: 7
          jewelrycrafting_max_xp: 6
          cooking_level: 8
          dmg_earth: 4
          artifact3_slot: artifact3_slot
          mining_level: 2
          cooldown_expiration: 2000-01-23T04:56:07.000+00:00
          cooking_xp: 9
          woodcutting_xp: 2
          haste: 6
          ring2_slot: ring2_slot
          task_progress: 1
          weapon_slot: weapon_slot
          inventory_max_items: 7
          bag_slot: bag_slot
          xp: 6
          x: 3
          fishing_max_xp: 1
          "y": 4
          rune_slot: rune_slot
          weaponcrafting_level: 1
          utility1_slot_quantity: 0
          task_type: task_type
          dmg_fire: 0
          res_earth: 3
          account: account
          dmg: 6
        - attack_fire: 3
          amulet_slot: amulet_slot
          dmg_water: 8
          prospecting: 3
          mining_max_xp: 9
          alchemy_level: 3
          hp: 2
          utility2_slot: utility2_slot
          mining_xp: 7
          critical_strike: 5
          alchemy_xp: 6
          cooldown: 0
          utility1_slot: utility1_slot
          body_armor_slot: body_armor_slot
          gearcrafting_level: 1
          fishing_xp: 1
          shield_slot: shield_slot
          level: 0
          weaponcrafting_xp: 6
          cooking_max_xp: 6
          res_water: 7
          attack_water: 0
          task: task
          gearcrafting_xp: 4
          artifact2_slot: artifact2_slot
          res_fire: 3
          name: name
          max_xp: 1
          jewelrycrafting_xp: 9
          task_total: 4
          weaponcrafting_max_xp: 7
          alchemy_max_xp: 1
          skin: ""
          attack_air: 7
          helmet_slot: helmet_slot
          res_air: 5
          artifact1_slot: artifact1_slot
          ring1_slot: ring1_slot
          max_hp: 6
          inventory:
          - code: code
            quantity: 0
            slot: 9
          - code: code
            quantity: 0
            slot: 9
          speed: 5
          dmg_air: 7
          wisdom: 6
          gold: 5
          boots_slot: boots_slot
          utility2_slot_quantity: 0
          fishing_level: 7
          gearcrafting_max_xp: 5
          woodcutting_level: 3
          jewelrycrafting_level: 9
          leg_armor_slot: leg_armor_slot
          woodcutting_max_xp: 4
          attack_earth: 7
          jewelrycrafting_max_xp: 6
          cooking_level: 8
          dmg_earth: 4
          artifact3_slot: artifact3_slot
          mining_level: 2
          cooldown_expiration: 2000-01-23T04:56:07.000+00:00
          cooking_xp: 9
          woodcutting_xp: 2
          haste: 6
          ring2_slot: ring2_slot
          task_progress: 1
          weapon_slot: weapon_slot
          inventory_max_items: 7
          bag_slot: bag_slot
          xp: 6
          x: 3
          fishing_max_xp: 1
          "y": 4
          rune_slot: rune_slot
          weaponcrafting_level: 1
          utility1_slot_quantity: 0
          task_type: task_type
          dmg_fire: 0
          res_earth: 3
          account: account
          dmg: 6
      properties:
        data:
          description: List of your characters.
          items:
            $ref: '#/components/schemas/CharacterSchema'
          type: array
      required:
      - data
      title: CharactersListSchema
    CooldownSchema:
      properties:
        total_seconds:
          description: The total seconds of the cooldown.
          title: Total Seconds
          type: integer
        remaining_seconds:
          description: The remaining seconds of the cooldown.
          title: Remaining Seconds
          type: integer
        started_at:
          description: The start of the cooldown.
          format: date-time
          title: Started At
          type: string
        expiration:
          description: The expiration of the cooldown.
          format: date-time
          title: Expiration
          type: string
        reason:
          allOf:
          - $ref: '#/components/schemas/ActionType'
          description: The reason of the cooldown.
      required:
      - expiration
      - reason
      - remaining_seconds
      - started_at
      - total_seconds
      title: CooldownSchema
    CraftSchema:
      example:
        quantity: 5
        level: 1
        skill: ""
        items:
        - code: code
          quantity: 1
        - code: code
          quantity: 1
      properties:
        skill:
          allOf:
          - $ref: '#/components/schemas/CraftSkill'
          description: Skill required to craft the item.
          title: Skill code
        level:
          description: The skill level required to craft the item.
          title: Level
          type: integer
        items:
          description: List of items required to craft the item.
          items:
            $ref: '#/components/schemas/SimpleItemSchema'
          type: array
        quantity:
          description: Quantity of items crafted.
          title: Quantity
          type: integer
      title: CraftSchema
    CraftSkill:
      enum:
      - weaponcrafting
      - gearcrafting
      - jewelrycrafting
      - cooking
      - woodcutting
      - mining
      - alchemy
      title: CraftSkill
      type: string
    CraftSkill_a-zA-Z0-9_-_____:
      $ref: '#/components/schemas/CraftSkill'
    CraftingSchema:
      example:
        code: code
        quantity: 1
      properties:
        code:
          description: Craft code.
          pattern: "^[a-zA-Z0-9_-]+$"
          title: Craft code
          type: string
        quantity:
          default: 1
          description: Quantity of items to craft.
          minimum: 1.0
          title: Quantity
          type: integer
      required:
      - code
      title: CraftingSchema
    DataPage_AccountAchievementSchema_:
      example:
        total: 0
        pages: 0
        data:
        - completed_at: 2000-01-23T04:56:07.000+00:00
          total: 6
          current: 1
          code: code
          name: name
          description: description
          type: ""
          rewards: ""
          points: 0
          target: target
        - completed_at: 2000-01-23T04:56:07.000+00:00
          total: 6
          current: 1
          code: code
          name: name
          description: description
          type: ""
          rewards: ""
          points: 0
          target: target
        size: 1
        page: 1
      properties:
        data:
          items:
            $ref: '#/components/schemas/AccountAchievementSchema'
          type: array
        total:
          minimum: 0.0
          nullable: true
          type: integer
        page:
          minimum: 1.0
          nullable: true
          type: integer
        size:
          minimum: 1.0
          nullable: true
          type: integer
        pages:
          minimum: 0.0
          nullable: true
          type: integer
      required:
      - data
      - page
      - size
      - total
      title: "DataPage[AccountAchievementSchema]"
    DataPage_AccountLeaderboardSchema_:
      example:
        total: 0
        pages: 0
        data:
        - gold: 1
          achievements_points: 6
          position: 0
          account: account
          status: ""
        - gold: 1
          achievements_points: 6
          position: 0
          account: account
          status: ""
        size: 1
        page: 1
      properties:
        data:
          items:
            $ref: '#/components/schemas/AccountLeaderboardSchema'
          type: array
        total:
          minimum: 0.0
          nullable: true
          type: integer
        page:
          minimum: 1.0
          nullable: true
          type: integer
        size:
          minimum: 1.0
          nullable: true
          type: integer
        pages:
          minimum: 0.0
          nullable: true
          type: integer
      required:
      - data
      - page
      - size
      - total
      title: "DataPage[AccountLeaderboardSchema]"
    DataPage_AchievementSchema_:
      example:
        total: 0
        pages: 0
        data:
        - total: 6
          code: code
          name: name
          description: description
          type: ""
          rewards: ""
          points: 0
          target: target
        - total: 6
          code: code
          name: name
          description: description
          type: ""
          rewards: ""
          points: 0
          target: target
        size: 1
        page: 1
      properties:
        data:
          items:
            $ref: '#/components/schemas/AchievementSchema'
          type: array
        total:
          minimum: 0.0
          nullable: true
          type: integer
        page:
          minimum: 1.0
          nullable: true
          type: integer
        size:
          minimum: 1.0
          nullable: true
          type: integer
        pages:
          minimum: 0.0
          nullable: true
          type: integer
      required:
      - data
      - page
      - size
      - total
      title: "DataPage[AchievementSchema]"
    DataPage_ActiveEventSchema_:
      example:
        total: 0
        pages: 0
        data:
        - duration: 0
          code: code
          name: name
          created_at: 2000-01-23T04:56:07.000+00:00
          expiration: 2000-01-23T04:56:07.000+00:00
          previous_skin: previous_skin
          map: ""
        - duration: 0
          code: code
          name: name
          created_at: 2000-01-23T04:56:07.000+00:00
          expiration: 2000-01-23T04:56:07.000+00:00
          previous_skin: previous_skin
          map: ""
        size: 1
        page: 1
      properties:
        data:
          items:
            $ref: '#/components/schemas/ActiveEventSchema'
          type: array
        total:
          minimum: 0.0
          nullable: true
          type: integer
        page:
          minimum: 1.0
          nullable: true
          type: integer
        size:
          minimum: 1.0
          nullable: true
          type: integer
        pages:
          minimum: 0.0
          nullable: true
          type: integer
      required:
      - data
      - page
      - size
      - total
      title: "DataPage[ActiveEventSchema]"
    DataPage_BadgeSchema_:
      example:
        total: 0
        pages: 0
        data:
        - code: code
          season: 0
          description: description
          conditions:
          - code: code
            quantity: 6
          - code: code
            quantity: 6
        - code: code
          season: 0
          description: description
          conditions:
          - code: code
            quantity: 6
          - code: code
            quantity: 6
        size: 1
        page: 1
      properties:
        data:
          items:
            $ref: '#/components/schemas/BadgeSchema'
          type: array
        total:
          minimum: 0.0
          nullable: true
          type: integer
        page:
          minimum: 1.0
          nullable: true
          type: integer
        size:
          minimum: 1.0
          nullable: true
          type: integer
        pages:
          minimum: 0.0
          nullable: true
          type: integer
      required:
      - data
      - page
      - size
      - total
      title: "DataPage[BadgeSchema]"
    DataPage_CharacterLeaderboardSchema_:
      example:
        total: 0
        pages: 0
        data:
        - weaponcrafting_total_xp: 4
          gearcrafting_level: 7
          jewelrycrafting_total_xp: 1
          total_xp: 1
          mining_level: 5
          level: 6
          skin: skin
          alchemy_level: 1
          fishing_total_xp: 3
          alchemy_total_xp: 4
          gold: 5
          name: name
          mining_total_xp: 5
          fishing_level: 9
          woodcutting_level: 2
          gearcrafting_total_xp: 1
          jewelrycrafting_level: 1
          position: 0
          weaponcrafting_level: 2
          cooking_total_xp: 7
          account: account
          status: ""
          woodcutting_total_xp: 7
          cooking_level: 6
        - weaponcrafting_total_xp: 4
          gearcrafting_level: 7
          jewelrycrafting_total_xp: 1
          total_xp: 1
          mining_level: 5
          level: 6
          skin: skin
          alchemy_level: 1
          fishing_total_xp: 3
          alchemy_total_xp: 4
          gold: 5
          name: name
          mining_total_xp: 5
          fishing_level: 9
          woodcutting_level: 2
          gearcrafting_total_xp: 1
          jewelrycrafting_level: 1
          position: 0
          weaponcrafting_level: 2
          cooking_total_xp: 7
          account: account
          status: ""
          woodcutting_total_xp: 7
          cooking_level: 6
        size: 1
        page: 1
      properties:
        data:
          items:
            $ref: '#/components/schemas/CharacterLeaderboardSchema'
          type: array
        total:
          minimum: 0.0
          nullable: true
          type: integer
        page:
          minimum: 1.0
          nullable: true
          type: integer
        size:
          minimum: 1.0
          nullable: true
          type: integer
        pages:
          minimum: 0.0
          nullable: true
          type: integer
      required:
      - data
      - page
      - size
      - total
      title: "DataPage[CharacterLeaderboardSchema]"
    DataPage_DropRateSchema_:
      example:
        total: 0
        pages: 0
        data:
        - code: code
          max_quantity: 1
          min_quantity: 1
          rate: 1
        - code: code
          max_quantity: 1
          min_quantity: 1
          rate: 1
        size: 1
        page: 1
      properties:
        data:
          items:
            $ref: '#/components/schemas/DropRateSchema'
          type: array
        total:
          minimum: 0.0
          nullable: true
          type: integer
        page:
          minimum: 1.0
          nullable: true
          type: integer
        size:
          minimum: 1.0
          nullable: true
          type: integer
        pages:
          minimum: 0.0
          nullable: true
          type: integer
      required:
      - data
      - page
      - size
      - total
      title: "DataPage[DropRateSchema]"
    DataPage_EffectSchema_:
      example:
        total: 0
        pages: 0
        data:
        - code: code
          subtype: ""
          name: name
          description: description
          type: ""
        - code: code
          subtype: ""
          name: name
          description: description
          type: ""
        size: 1
        page: 1
      properties:
        data:
          items:
            $ref: '#/components/schemas/EffectSchema'
          type: array
        total:
          minimum: 0.0
          nullable: true
          type: integer
        page:
          minimum: 1.0
          nullable: true
          type: integer
        size:
          minimum: 1.0
          nullable: true
          type: integer
        pages:
          minimum: 0.0
          nullable: true
          type: integer
      required:
      - data
      - page
      - size
      - total
      title: "DataPage[EffectSchema]"
    DataPage_EventSchema_:
      example:
        total: 0
        pages: 0
        data:
        - duration: 1
          code: code
          maps:
          - x: 0
            "y": 6
          - x: 0
            "y": 6
          rate: 5
          name: name
          skin: skin
          content: ""
        - duration: 1
          code: code
          maps:
          - x: 0
            "y": 6
          - x: 0
            "y": 6
          rate: 5
          name: name
          skin: skin
          content: ""
        size: 1
        page: 1
      properties:
        data:
          items:
            $ref: '#/components/schemas/EventSchema'
          type: array
        total:
          minimum: 0.0
          nullable: true
          type: integer
        page:
          minimum: 1.0
          nullable: true
          type: integer
        size:
          minimum: 1.0
          nullable: true
          type: integer
        pages:
          minimum: 0.0
          nullable: true
          type: integer
      required:
      - data
      - page
      - size
      - total
      title: "DataPage[EventSchema]"
    DataPage_GEOrderSchema_:
      example:
        total: 0
        pages: 0
        data:
        - seller: seller
          code: code
          quantity: 8
          price: 1
          created_at: 2000-01-23T04:56:07.000+00:00
          id: id
        - seller: seller
          code: code
          quantity: 8
          price: 1
          created_at: 2000-01-23T04:56:07.000+00:00
          id: id
        size: 1
        page: 1
      properties:
        data:
          items:
            $ref: '#/components/schemas/GEOrderSchema'
          type: array
        total:
          minimum: 0.0
          nullable: true
          type: integer
        page:
          minimum: 1.0
          nullable: true
          type: integer
        size:
          minimum: 1.0
          nullable: true
          type: integer
        pages:
          minimum: 0.0
          nullable: true
          type: integer
      required:
      - data
      - page
      - size
      - total
      title: "DataPage[GEOrderSchema]"
    DataPage_GeOrderHistorySchema_:
      example:
        total: 0
        pages: 0
        data:
        - seller: seller
          code: code
          quantity: 8
          price: 1
          sold_at: 2000-01-23T04:56:07.000+00:00
          order_id: order_id
          buyer: buyer
        - seller: seller
          code: code
          quantity: 8
          price: 1
          sold_at: 2000-01-23T04:56:07.000+00:00
          order_id: order_id
          buyer: buyer
        size: 1
        page: 1
      properties:
        data:
          items:
            $ref: '#/components/schemas/GeOrderHistorySchema'
          type: array
        total:
          minimum: 0.0
          nullable: true
          type: integer
        page:
          minimum: 1.0
          nullable: true
          type: integer
        size:
          minimum: 1.0
          nullable: true
          type: integer
        pages:
          minimum: 0.0
          nullable: true
          type: integer
      required:
      - data
      - page
      - size
      - total
      title: "DataPage[GeOrderHistorySchema]"
    DataPage_ItemSchema_:
      example:
        total: 0
        pages: 0
        data:
        - effects:
          - code: code
            value: 6
          - code: code
            value: 6
          code: code
          level: 1
          subtype: subtype
          name: name
          craft:
            quantity: 5
            level: 1
            skill: ""
            items:
            - code: code
              quantity: 1
            - code: code
              quantity: 1
          tradeable: true
          description: description
          type: type
        - effects:
          - code: code
            value: 6
          - code: code
            value: 6
          code: code
          level: 1
          subtype: subtype
          name: name
          craft:
            quantity: 5
            level: 1
            skill: ""
            items:
            - code: code
              quantity: 1
            - code: code
              quantity: 1
          tradeable: true
          description: description
          type: type
        size: 1
        page: 1
      properties:
        data:
          items:
            $ref: '#/components/schemas/ItemSchema'
          type: array
        total:
          minimum: 0.0
          nullable: true
          type: integer
        page:
          minimum: 1.0
          nullable: true
          type: integer
        size:
          minimum: 1.0
          nullable: true
          type: integer
        pages:
          minimum: 0.0
          nullable: true
          type: integer
      required:
      - data
      - page
      - size
      - total
      title: "DataPage[ItemSchema]"
    DataPage_LogSchema_:
      example:
        total: 0
        pages: 0
        data:
        - character: character
          cooldown_expiration: 2000-01-23T04:56:07.000+00:00
          cooldown: 0
          description: description
          created_at: 2000-01-23T04:56:07.000+00:00
          type: ""
          account: account
          content: ""
        - character: character
          cooldown_expiration: 2000-01-23T04:56:07.000+00:00
          cooldown: 0
          description: description
          created_at: 2000-01-23T04:56:07.000+00:00
          type: ""
          account: account
          content: ""
        size: 1
        page: 1
      properties:
        data:
          items:
            $ref: '#/components/schemas/LogSchema'
          type: array
        total:
          minimum: 0.0
          nullable: true
          type: integer
        page:
          minimum: 1.0
          nullable: true
          type: integer
        size:
          minimum: 1.0
          nullable: true
          type: integer
        pages:
          minimum: 0.0
          nullable: true
          type: integer
      required:
      - data
      - page
      - size
      - total
      title: "DataPage[LogSchema]"
    DataPage_MapSchema_:
      example:
        total: 0
        pages: 0
        data:
        - name: name
          skin: skin
          x: 0
          "y": 6
          content:
            code: code
            type: ""
        - name: name
          skin: skin
          x: 0
          "y": 6
          content:
            code: code
            type: ""
        size: 1
        page: 1
      properties:
        data:
          items:
            $ref: '#/components/schemas/MapSchema'
          type: array
        total:
          minimum: 0.0
          nullable: true
          type: integer
        page:
          minimum: 1.0
          nullable: true
          type: integer
        size:
          minimum: 1.0
          nullable: true
          type: integer
        pages:
          minimum: 0.0
          nullable: true
          type: integer
      required:
      - data
      - page
      - size
      - total
      title: "DataPage[MapSchema]"
    DataPage_MonsterSchema_:
      example:
        total: 0
        pages: 0
        data:
        - attack_fire: 1
          code: code
          min_gold: 7
          level: 0
          hp: 6
          attack_air: 2
          res_air: 2
          res_water: 3
          attack_water: 5
          critical_strike: 4
          effects:
          - code: code
            value: 6
          - code: code
            value: 6
          drops:
          - code: code
            max_quantity: 1
            min_quantity: 1
            rate: 1
          - code: code
            max_quantity: 1
            min_quantity: 1
            rate: 1
          res_fire: 7
          max_gold: 1
          name: name
          attack_earth: 5
          res_earth: 9
        - attack_fire: 1
          code: code
          min_gold: 7
          level: 0
          hp: 6
          attack_air: 2
          res_air: 2
          res_water: 3
          attack_water: 5
          critical_strike: 4
          effects:
          - code: code
            value: 6
          - code: code
            value: 6
          drops:
          - code: code
            max_quantity: 1
            min_quantity: 1
            rate: 1
          - code: code
            max_quantity: 1
            min_quantity: 1
            rate: 1
          res_fire: 7
          max_gold: 1
          name: name
          attack_earth: 5
          res_earth: 9
        size: 1
        page: 1
      properties:
        data:
          items:
            $ref: '#/components/schemas/MonsterSchema'
          type: array
        total:
          minimum: 0.0
          nullable: true
          type: integer
        page:
          minimum: 1.0
          nullable: true
          type: integer
        size:
          minimum: 1.0
          nullable: true
          type: integer
        pages:
          minimum: 0.0
          nullable: true
          type: integer
      required:
      - data
      - page
      - size
      - total
      title: "DataPage[MonsterSchema]"
    DataPage_NPCItem_:
      example:
        total: 0
        pages: 0
        data:
        - npc: npc
          code: code
          sell_price: 6
          buy_price: 0
        - npc: npc
          code: code
          sell_price: 6
          buy_price: 0
        size: 1
        page: 1
      properties:
        data:
          items:
            $ref: '#/components/schemas/NPCItem'
          type: array
        total:
          minimum: 0.0
          nullable: true
          type: integer
        page:
          minimum: 1.0
          nullable: true
          type: integer
        size:
          minimum: 1.0
          nullable: true
          type: integer
        pages:
          minimum: 0.0
          nullable: true
          type: integer
      required:
      - data
      - page
      - size
      - total
      title: "DataPage[NPCItem]"
    DataPage_NPCSchema_:
      example:
        total: 0
        pages: 0
        data:
        - code: code
          name: name
          description: description
          type: ""
        - code: code
          name: name
          description: description
          type: ""
        size: 1
        page: 1
      properties:
        data:
          items:
            $ref: '#/components/schemas/NPCSchema'
          type: array
        total:
          minimum: 0.0
          nullable: true
          type: integer
        page:
          minimum: 1.0
          nullable: true
          type: integer
        size:
          minimum: 1.0
          nullable: true
          type: integer
        pages:
          minimum: 0.0
          nullable: true
          type: integer
      required:
      - data
      - page
      - size
      - total
      title: "DataPage[NPCSchema]"
    DataPage_ResourceSchema_:
      example:
        total: 0
        pages: 0
        data:
        - drops:
          - code: code
            max_quantity: 1
            min_quantity: 1
            rate: 1
          - code: code
            max_quantity: 1
            min_quantity: 1
            rate: 1
          code: code
          level: 0
          skill: ""
          name: name
        - drops:
          - code: code
            max_quantity: 1
            min_quantity: 1
            rate: 1
          - code: code
            max_quantity: 1
            min_quantity: 1
            rate: 1
          code: code
          level: 0
          skill: ""
          name: name
        size: 1
        page: 1
      properties:
        data:
          items:
            $ref: '#/components/schemas/ResourceSchema'
          type: array
        total:
          minimum: 0.0
          nullable: true
          type: integer
        page:
          minimum: 1.0
          nullable: true
          type: integer
        size:
          minimum: 1.0
          nullable: true
          type: integer
        pages:
          minimum: 0.0
          nullable: true
          type: integer
      required:
      - data
      - page
      - size
      - total
      title: "DataPage[ResourceSchema]"
    DataPage_SimpleItemSchema_:
      example:
        total: 0
        pages: 0
        data:
        - code: code
          quantity: 1
        - code: code
          quantity: 1
        size: 1
        page: 1
      properties:
        data:
          items:
            $ref: '#/components/schemas/SimpleItemSchema'
          type: array
        total:
          minimum: 0.0
          nullable: true
          type: integer
        page:
          minimum: 1.0
          nullable: true
          type: integer
        size:
          minimum: 1.0
          nullable: true
          type: integer
        pages:
          minimum: 0.0
          nullable: true
          type: integer
      required:
      - data
      - page
      - size
      - total
      title: "DataPage[SimpleItemSchema]"
    DataPage_TaskFullSchema_:
      example:
        total: 0
        pages: 0
        data:
        - code: code
          max_quantity: 1
          min_quantity: 6
          level: 0
          skill: skill
          type: ""
          rewards: ""
        - code: code
          max_quantity: 1
          min_quantity: 6
          level: 0
          skill: skill
          type: ""
          rewards: ""
        size: 1
        page: 1
      properties:
        data:
          items:
            $ref: '#/components/schemas/TaskFullSchema'
          type: array
        total:
          minimum: 0.0
          nullable: true
          type: integer
        page:
          minimum: 1.0
          nullable: true
          type: integer
        size:
          minimum: 1.0
          nullable: true
          type: integer
        pages:
          minimum: 0.0
          nullable: true
          type: integer
      required:
      - data
      - page
      - size
      - total
      title: "DataPage[TaskFullSchema]"
    DeleteCharacterSchema:
      example:
        name: name
      properties:
        name:
          description: Character name.
          maxLength: 12
          minLength: 3
          pattern: "^[a-zA-Z0-9_-]+$"
          title: Name
          type: string
      required:
      - name
      title: DeleteCharacterSchema
    DeleteItemResponseSchema:
      example:
        data:
          item: ""
          character: ""
          cooldown: ""
      properties:
        data:
          $ref: '#/components/schemas/DeleteItemSchema'
      required:
      - data
      title: DeleteItemResponseSchema
    DeleteItemSchema:
      example:
        item: ""
        character: ""
        cooldown: ""
      properties:
        cooldown:
          allOf:
          - $ref: '#/components/schemas/CooldownSchema'
          description: Cooldown details.
        item:
          allOf:
          - $ref: '#/components/schemas/SimpleItemSchema'
          description: Item details.
        character:
          allOf:
          - $ref: '#/components/schemas/CharacterSchema'
          description: Player details.
      required:
      - character
      - cooldown
      - item
      title: DeleteItemSchema
    DepositWithdrawGoldSchema:
      example:
        quantity: 1
      properties:
        quantity:
          description: Quantity of gold.
          minimum: 1.0
          title: Quantity
          type: integer
      required:
      - quantity
      title: DepositWithdrawGoldSchema
    DestinationSchema:
      example:
        x: 0
        "y": 6
      properties:
        x:
          description: The x coordinate of the destination.
          title: X
          type: integer
        "y":
          description: The y coordinate of the destination.
          title: "Y"
          type: integer
      required:
      - x
      - "y"
      title: DestinationSchema
    DropRateSchema:
      example:
        code: code
        max_quantity: 1
        min_quantity: 1
        rate: 1
      properties:
        code:
          description: Item code.
          pattern: "^[a-zA-Z0-9_-]+$"
          title: Item code
          type: string
        rate:
          description: Chance rate. (1/rate)
          minimum: 1.0
          title: Rate
          type: integer
        min_quantity:
          description: Minimum quantity.
          minimum: 1.0
          title: Min Quantity
          type: integer
        max_quantity:
          description: Maximum quantity.
          minimum: 1.0
          title: Max Quantity
          type: integer
      required:
      - code
      - max_quantity
      - min_quantity
      - rate
      title: DropRateSchema
    DropSchema:
      properties:
        code:
          description: The code of the item.
          title: Code
          type: string
        quantity:
          description: The quantity of the item.
          title: Quantity
          type: integer
      required:
      - code
      - quantity
      title: DropSchema
    EffectResponseSchema:
      example:
        data:
          code: code
          subtype: ""
          name: name
          description: description
          type: ""
      properties:
        data:
          $ref: '#/components/schemas/EffectSchema'
      required:
      - data
      title: EffectResponseSchema
    EffectSchema:
      example:
        code: code
        subtype: ""
        name: name
        description: description
        type: ""
      properties:
        name:
          description: Name of the effect.
          title: Name
          type: string
        code:
          description: The code of the effect. This is the effect's unique identifier
            (ID).
          title: Code
          type: string
        description:
          description: Description of the effect. This is a brief description of the
            effect.
          title: Description
          type: string
        type:
          allOf:
          - $ref: '#/components/schemas/EffectType'
          description: Type of the effect.
        subtype:
          allOf:
          - $ref: '#/components/schemas/EffectSubtype'
          description: Subtype of the effect.
      required:
      - code
      - description
      - name
      - subtype
      - type
      title: EffectSchema
    EffectSubtype:
      enum:
      - stat
      - other
      - heal
      - buff
      - debuff
      - special
      - gathering
      - teleport
      - gold
      title: EffectSubtype
      type: string
    EffectType:
      enum:
      - equipment
      - consumable
      - combat
      title: EffectType
      type: string
    EquipRequestSchema:
      example:
        item: ""
        character: ""
        cooldown: ""
        slot: ""
      properties:
        cooldown:
          allOf:
          - $ref: '#/components/schemas/CooldownSchema'
          description: Cooldown details.
        slot:
          allOf:
          - $ref: '#/components/schemas/ItemSlot'
          description: Item slot.
        item:
          allOf:
          - $ref: '#/components/schemas/ItemSchema'
          description: Item details.
        character:
          allOf:
          - $ref: '#/components/schemas/CharacterSchema'
          description: Player details.
      required:
      - character
      - cooldown
      - item
      - slot
      title: EquipRequestSchema
    EquipSchema:
      example:
        code: code
        quantity: 8
        slot: ""
      properties:
        code:
          description: Item code.
          pattern: "^[a-zA-Z0-9_-]+$"
          title: Code
          type: string
        slot:
          allOf:
          - $ref: '#/components/schemas/ItemSlot'
          description: Item slot.
        quantity:
          default: 1
          description: Item quantity. Applicable to utilities only.
          maximum: 100.0
          minimum: 1.0
          title: Quantity
          type: integer
      required:
      - code
      - slot
      title: EquipSchema
    EquipmentResponseSchema:
      example:
        data:
          item: ""
          character: ""
          cooldown: ""
          slot: ""
      properties:
        data:
          $ref: '#/components/schemas/EquipRequestSchema'
      required:
      - data
      title: EquipmentResponseSchema
    EventContentSchema:
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/MapContentType'
          description: Type of the event.
        code:
          description: Code content.
          title: Code
          type: string
      required:
      - code
      - type
      title: EventContentSchema
    EventMapSchema:
      example:
        x: 0
        "y": 6
      properties:
        x:
          description: Position X of the map.
          title: X
          type: integer
        "y":
          description: Position Y of the map.
          title: "Y"
          type: integer
      required:
      - x
      - "y"
      title: EventMapSchema
    EventSchema:
      example:
        duration: 1
        code: code
        maps:
        - x: 0
          "y": 6
        - x: 0
          "y": 6
        rate: 5
        name: name
        skin: skin
        content: ""
      properties:
        name:
          description: Name of the event.
          title: Name
          type: string
        code:
          description: Code of the event.
          title: Code
          type: string
        content:
          allOf:
          - $ref: '#/components/schemas/EventContentSchema'
          description: Content of the event.
        maps:
          description: Map list of the event.
          items:
            $ref: '#/components/schemas/EventMapSchema'
          type: array
        skin:
          description: Map skin of the event.
          title: Skin
          type: string
        duration:
          description: Duration in minutes.
          title: Duration
          type: integer
        rate:
          description: Rate spawn of the event. (1/rate every minute)
          title: Rate
          type: integer
      required:
      - code
      - content
      - duration
      - maps
      - name
      - rate
      - skin
      title: EventSchema
    FightResult:
      enum:
      - win
      - loss
      title: FightResult
      type: string
    FightSchema:
      properties:
        xp:
          description: The amount of xp gained from the fight.
          title: Xp
          type: integer
        gold:
          description: The amount of gold gained from the fight.
          title: Gold
          type: integer
        drops:
          description: The items dropped from the fight.
          items:
            $ref: '#/components/schemas/DropSchema'
          type: array
        turns:
          description: Numbers of the turns of the combat.
          title: Turns
          type: integer
        monster_blocked_hits:
          allOf:
          - $ref: '#/components/schemas/BlockedHitsSchema'
          description: The amount of blocked hits by the monster.
        player_blocked_hits:
          allOf:
          - $ref: '#/components/schemas/BlockedHitsSchema'
          description: The amount of blocked hits by the player.
        logs:
          description: The fight logs.
          items:
            type: string
          type: array
        result:
          allOf:
          - $ref: '#/components/schemas/FightResult'
          description: The result of the fight.
      required:
      - drops
      - gold
      - logs
      - monster_blocked_hits
      - player_blocked_hits
      - result
      - turns
      - xp
      title: FightSchema
    GEBuyOrderSchema:
      example:
        quantity: 8
        id: id
      properties:
        id:
          description: Order id.
          title: Id
          type: string
        quantity:
          description: Item quantity.
          maximum: 100.0
          minimum: 1.0
          title: Quantity
          type: integer
      required:
      - id
      - quantity
      title: GEBuyOrderSchema
    GECancelOrderSchema:
      example:
        id: id
      properties:
        id:
          description: Order id.
          title: Id
          type: string
      required:
      - id
      title: GECancelOrderSchema
    GECreateOrderTransactionResponseSchema:
      example:
        data:
          character: ""
          cooldown: ""
          order: ""
      properties:
        data:
          $ref: '#/components/schemas/GEOrderTransactionSchema'
      required:
      - data
      title: GECreateOrderTransactionResponseSchema
    GEOrderCreatedSchema:
      properties:
        id:
          description: Order id.
          title: Id
          type: string
        created_at:
          description: Order created at.
          format: date-time
          title: Created At
          type: string
        code:
          description: Item code.
          pattern: "^[a-zA-Z0-9_-]+$"
          title: Code
          type: string
        quantity:
          description: Item quantity.
          maximum: 100.0
          minimum: 1.0
          title: Quantity
          type: integer
        price:
          description: Item price per unit.
          minimum: 1.0
          title: Price
          type: integer
        total_price:
          description: Total price.
          minimum: 1.0
          title: Total Price
          type: integer
        tax:
          description: "Listing tax (3%, minimum 1)"
          minimum: 1.0
          title: Tax
          type: integer
      required:
      - code
      - created_at
      - id
      - price
      - quantity
      - tax
      - total_price
      title: GEOrderCreatedSchema
    GEOrderCreationrSchema:
      example:
        code: code
        quantity: 8
        price: 602745618
      properties:
        code:
          description: Item code.
          pattern: "^[a-zA-Z0-9_-]+$"
          title: Code
          type: string
        quantity:
          description: Item quantity.
          maximum: 100.0
          minimum: 1.0
          title: Quantity
          type: integer
        price:
          description: Item price per unit.
          maximum: 1000000000
          minimum: 1.0
          title: Price
          type: integer
      required:
      - code
      - price
      - quantity
      title: GEOrderCreationrSchema
    GEOrderReponseSchema:
      example:
        data:
          seller: seller
          code: code
          quantity: 8
          price: 1
          created_at: 2000-01-23T04:56:07.000+00:00
          id: id
      properties:
        data:
          $ref: '#/components/schemas/GEOrderSchema'
      required:
      - data
      title: GEOrderReponseSchema
    GEOrderSchema:
      example:
        seller: seller
        code: code
        quantity: 8
        price: 1
        created_at: 2000-01-23T04:56:07.000+00:00
        id: id
      properties:
        id:
          description: Order id.
          title: Id
          type: string
        seller:
          description: Seller account name.
          title: Seller
          type: string
        code:
          description: Item code.
          title: Code
          type: string
        quantity:
          description: Item quantity.
          maximum: 100.0
          minimum: 1.0
          title: Quantity
          type: integer
        price:
          description: Item price per unit.
          minimum: 1.0
          title: Price
          type: integer
        created_at:
          description: Order created at.
          format: date-time
          title: Created At
          type: string
      required:
      - code
      - created_at
      - id
      - price
      - quantity
      - seller
      title: GEOrderSchema
    GEOrderTransactionSchema:
      example:
        character: ""
        cooldown: ""
        order: ""
      properties:
        cooldown:
          allOf:
          - $ref: '#/components/schemas/CooldownSchema'
          description: Cooldown details.
        order:
          allOf:
          - $ref: '#/components/schemas/GEOrderCreatedSchema'
          description: Order details.
        character:
          allOf:
          - $ref: '#/components/schemas/CharacterSchema'
          description: Character details.
      required:
      - character
      - cooldown
      - order
      title: GEOrderTransactionSchema
    GETransactionListSchema:
      example:
        character: ""
        cooldown: ""
        order: ""
      properties:
        cooldown:
          allOf:
          - $ref: '#/components/schemas/CooldownSchema'
          description: Cooldown details.
        order:
          allOf:
          - $ref: '#/components/schemas/GETransactionSchema'
          description: Transaction details.
        character:
          allOf:
          - $ref: '#/components/schemas/CharacterSchema'
          description: Character details.
      required:
      - character
      - cooldown
      - order
      title: GETransactionListSchema
    GETransactionResponseSchema:
      example:
        data:
          character: ""
          cooldown: ""
          order: ""
      properties:
        data:
          $ref: '#/components/schemas/GETransactionListSchema'
      required:
      - data
      title: GETransactionResponseSchema
    GETransactionSchema:
      properties:
        id:
          description: Order id.
          title: Id
          type: string
        code:
          description: Item code.
          title: Code
          type: string
        quantity:
          description: Item quantity.
          title: Quantity
          type: integer
        price:
          description: Item price.
          title: Price
          type: integer
        total_price:
          description: Total price of the transaction.
          title: Total Price
          type: integer
      required:
      - code
      - id
      - price
      - quantity
      - total_price
      title: GETransactionSchema
    GatheringSkill:
      enum:
      - mining
      - woodcutting
      - fishing
      - alchemy
      title: GatheringSkill
      type: string
    GatheringSkill_a-zA-Z0-9_-_____:
      $ref: '#/components/schemas/GatheringSkill'
    GeOrderHistorySchema:
      example:
        seller: seller
        code: code
        quantity: 8
        price: 1
        sold_at: 2000-01-23T04:56:07.000+00:00
        order_id: order_id
        buyer: buyer
      properties:
        order_id:
          description: Order id.
          title: Order Id
          type: string
        seller:
          description: Seller account name.
          title: Seller
          type: string
        buyer:
          description: Buyer account name.
          title: Buyer
          type: string
        code:
          description: Item code.
          title: Code
          type: string
        quantity:
          description: Item quantity.
          maximum: 100.0
          minimum: 1.0
          title: Quantity
          type: integer
        price:
          description: Item price per unit.
          minimum: 1.0
          title: Price
          type: integer
        sold_at:
          description: Sale datetime.
          format: date-time
          title: Sold At
          type: string
      required:
      - buyer
      - code
      - order_id
      - price
      - quantity
      - seller
      - sold_at
      title: GeOrderHistorySchema
    GoldSchema:
      properties:
        quantity:
          description: Quantity of gold.
          minimum: 0.0
          title: Quantity
          type: integer
      required:
      - quantity
      title: GoldSchema
    HTTPValidationError:
      properties:
        detail:
          items:
            $ref: '#/components/schemas/ValidationError'
          type: array
      title: HTTPValidationError
    InventorySlot:
      example:
        code: code
        quantity: 0
        slot: 9
      properties:
        slot:
          description: Inventory slot identifier.
          title: Slot
          type: integer
        code:
          description: Item code.
          title: Code
          type: string
        quantity:
          description: Quantity in the slot.
          title: Quantity
          type: integer
      required:
      - code
      - quantity
      - slot
      title: InventorySlot
    ItemResponseSchema:
      example:
        data:
          effects:
          - code: code
            value: 6
          - code: code
            value: 6
          code: code
          level: 1
          subtype: subtype
          name: name
          craft:
            quantity: 5
            level: 1
            skill: ""
            items:
            - code: code
              quantity: 1
            - code: code
              quantity: 1
          tradeable: true
          description: description
          type: type
      properties:
        data:
          $ref: '#/components/schemas/ItemSchema'
      required:
      - data
      title: ItemResponseSchema
    ItemSchema:
      example:
        effects:
        - code: code
          value: 6
        - code: code
          value: 6
        code: code
        level: 1
        subtype: subtype
        name: name
        craft:
          quantity: 5
          level: 1
          skill: ""
          items:
          - code: code
            quantity: 1
          - code: code
            quantity: 1
        tradeable: true
        description: description
        type: type
      properties:
        name:
          description: Item name.
          title: Name
          type: string
        code:
          description: Item code. This is the item's unique identifier (ID).
          title: Code
          type: string
        level:
          description: Item level.
          minimum: 1.0
          title: Level
          type: integer
        type:
          description: Item type.
          title: Type
          type: string
        subtype:
          description: Item subtype.
          title: Subtype
          type: string
        description:
          description: Item description.
          title: Description
          type: string
        effects:
          description: "List of object effects. For equipment, it will include item\
            \ stats."
          items:
            $ref: '#/components/schemas/SimpleEffectSchema'
          type: array
        craft:
          $ref: '#/components/schemas/CraftSchema'
        tradeable:
          description: Item tradeable status. A non-tradeable item cannot be exchanged
            or sold.
          title: Tradeable
          type: boolean
      required:
      - code
      - description
      - level
      - name
      - subtype
      - tradeable
      - type
      title: ItemSchema
    ItemSlot:
      enum:
      - weapon
      - shield
      - helmet
      - body_armor
      - leg_armor
      - boots
      - ring1
      - ring2
      - amulet
      - artifact1
      - artifact2
      - artifact3
      - utility1
      - utility2
      - bag
      - rune
      title: ItemSlot
      type: string
    ItemType:
      enum:
      - utility
      - body_armor
      - weapon
      - resource
      - leg_armor
      - helmet
      - boots
      - shield
      - amulet
      - ring
      - artifact
      - currency
      - consumable
      - rune
      - bag
      title: ItemType
      type: string
    ItemType_a-zA-Z0-9_-_____:
      $ref: '#/components/schemas/ItemType'
    LogSchema:
      example:
        character: character
        cooldown_expiration: 2000-01-23T04:56:07.000+00:00
        cooldown: 0
        description: description
        created_at: 2000-01-23T04:56:07.000+00:00
        type: ""
        account: account
        content: ""
      properties:
        character:
          description: Character name.
          title: Character
          type: string
        account:
          description: Account character.
          title: Account
          type: string
        type:
          allOf:
          - $ref: '#/components/schemas/LogType'
          description: Type of action.
        description:
          description: Description of action.
          title: Description
          type: string
        content: {}
        cooldown:
          description: Cooldown in seconds.
          title: Cooldown
          type: integer
        cooldown_expiration:
          format: date-time
          nullable: true
          type: string
        created_at:
          description: Datetime of creation.
          format: date-time
          title: Created At
          type: string
      required:
      - account
      - character
      - content
      - cooldown
      - cooldown_expiration
      - created_at
      - description
      - type
      title: LogSchema
    LogType:
      enum:
      - spawn
      - movement
      - fight
      - crafting
      - gathering
      - buy_ge
      - sell_ge
      - buy_npc
      - sell_npc
      - cancel_ge
      - delete_item
      - deposit
      - withdraw
      - deposit_gold
      - withdraw_gold
      - equip
      - unequip
      - new_task
      - task_exchange
      - task_cancelled
      - task_completed
      - task_trade
      - christmas_exchange
      - recycling
      - rest
      - use
      - buy_bank_expansion
      - achievement
      title: LogType
      type: string
    MapContentSchema:
      example:
        code: code
        type: ""
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/MapContentType'
          description: Type of the content.
        code:
          description: Code of the content.
          title: Code
          type: string
      required:
      - code
      - type
      title: MapContentSchema
    MapContentType:
      enum:
      - monster
      - resource
      - workshop
      - bank
      - grand_exchange
      - tasks_master
      - npc
      title: MapContentType
      type: string
    MapContentType_a-zA-Z0-9_-_____:
      $ref: '#/components/schemas/MapContentType'
    MapResponseSchema:
      example:
        data:
          name: name
          skin: skin
          x: 0
          "y": 6
          content:
            code: code
            type: ""
      properties:
        data:
          $ref: '#/components/schemas/MapSchema'
      required:
      - data
      title: MapResponseSchema
    MapSchema:
      example:
        name: name
        skin: skin
        x: 0
        "y": 6
        content:
          code: code
          type: ""
      properties:
        name:
          description: Name of the map.
          title: Name
          type: string
        skin:
          description: Skin of the map.
          title: Skin
          type: string
        x:
          description: Position X of the map.
          title: X
          type: integer
        "y":
          description: Position Y of the map.
          title: "Y"
          type: integer
        content:
          $ref: '#/components/schemas/MapContentSchema'
      required:
      - content
      - name
      - skin
      - x
      - "y"
      title: MapSchema
    MonsterResponseSchema:
      example:
        data:
          attack_fire: 1
          code: code
          min_gold: 7
          level: 0
          hp: 6
          attack_air: 2
          res_air: 2
          res_water: 3
          attack_water: 5
          critical_strike: 4
          effects:
          - code: code
            value: 6
          - code: code
            value: 6
          drops:
          - code: code
            max_quantity: 1
            min_quantity: 1
            rate: 1
          - code: code
            max_quantity: 1
            min_quantity: 1
            rate: 1
          res_fire: 7
          max_gold: 1
          name: name
          attack_earth: 5
          res_earth: 9
      properties:
        data:
          $ref: '#/components/schemas/MonsterSchema'
      required:
      - data
      title: MonsterResponseSchema
    MonsterSchema:
      example:
        attack_fire: 1
        code: code
        min_gold: 7
        level: 0
        hp: 6
        attack_air: 2
        res_air: 2
        res_water: 3
        attack_water: 5
        critical_strike: 4
        effects:
        - code: code
          value: 6
        - code: code
          value: 6
        drops:
        - code: code
          max_quantity: 1
          min_quantity: 1
          rate: 1
        - code: code
          max_quantity: 1
          min_quantity: 1
          rate: 1
        res_fire: 7
        max_gold: 1
        name: name
        attack_earth: 5
        res_earth: 9
      properties:
        name:
          description: Name of the monster.
          title: Name
          type: string
        code:
          description: The code of the monster. This is the monster's unique identifier
            (ID).
          title: Code
          type: string
        level:
          description: Monster level.
          title: Level
          type: integer
        hp:
          description: Monster hit points.
          title: Hp
          type: integer
        attack_fire:
          description: Monster fire attack.
          title: Attack Fire
          type: integer
        attack_earth:
          description: Monster earth attack.
          title: Attack Earth
          type: integer
        attack_water:
          description: Monster water attack.
          title: Attack Water
          type: integer
        attack_air:
          description: Monster air attack.
          title: Attack Air
          type: integer
        res_fire:
          description: Monster % fire resistance.
          title: Res Fire
          type: integer
        res_earth:
          description: Monster % earth resistance.
          title: Res Earth
          type: integer
        res_water:
          description: Monster % water resistance.
          title: Res Water
          type: integer
        res_air:
          description: Monster % air resistance.
          title: Res Air
          type: integer
        critical_strike:
          description: Monster % critical strike.
          title: Critical Strike
          type: integer
        effects:
          description: List of effects.
          items:
            $ref: '#/components/schemas/SimpleEffectSchema'
          type: array
        min_gold:
          description: 'Monster minimum gold drop. '
          title: Min Gold
          type: integer
        max_gold:
          description: 'Monster maximum gold drop. '
          title: Max Gold
          type: integer
        drops:
          description: 'Monster drops. This is a list of items that the monster drops
            after killing the monster. '
          items:
            $ref: '#/components/schemas/DropRateSchema'
          type: array
      required:
      - attack_air
      - attack_earth
      - attack_fire
      - attack_water
      - code
      - critical_strike
      - drops
      - hp
      - level
      - max_gold
      - min_gold
      - name
      - res_air
      - res_earth
      - res_fire
      - res_water
      title: MonsterSchema
    MyAccountDetails:
      example:
        badges:
        - ""
        - ""
        subscribed: true
        achievements_points: 6
        gems: 0
        ban_reason: ban_reason
        banned: true
        email: email
        username: username
        status: ""
      properties:
        username:
          description: Username.
          title: Username
          type: string
        email:
          description: Email.
          format: email
          title: Email
          type: string
        subscribed:
          description: Subscribed for the current season.
          title: Subscribed
          type: boolean
        status:
          allOf:
          - $ref: '#/components/schemas/AccountStatus'
          description: Member status.
        badges:
          description: Account badges.
          items: {}
          type: array
        gems:
          description: Gems.
          title: Gems
          type: integer
        achievements_points:
          description: Achievement points.
          title: Achievements Points
          type: integer
        banned:
          description: Banned.
          title: Banned
          type: boolean
        ban_reason:
          description: Ban reason.
          title: Ban Reason
          type: string
      required:
      - achievements_points
      - banned
      - email
      - gems
      - status
      - subscribed
      - username
      title: MyAccountDetails
    MyAccountDetailsSchema:
      example:
        data:
          badges:
          - ""
          - ""
          subscribed: true
          achievements_points: 6
          gems: 0
          ban_reason: ban_reason
          banned: true
          email: email
          username: username
          status: ""
      properties:
        data:
          $ref: '#/components/schemas/MyAccountDetails'
      required:
      - data
      title: MyAccountDetailsSchema
    MyCharactersListSchema:
      example:
        data:
        - attack_fire: 3
          amulet_slot: amulet_slot
          dmg_water: 8
          prospecting: 3
          mining_max_xp: 9
          alchemy_level: 3
          hp: 2
          utility2_slot: utility2_slot
          mining_xp: 7
          critical_strike: 5
          alchemy_xp: 6
          cooldown: 0
          utility1_slot: utility1_slot
          body_armor_slot: body_armor_slot
          gearcrafting_level: 1
          fishing_xp: 1
          shield_slot: shield_slot
          level: 0
          weaponcrafting_xp: 6
          cooking_max_xp: 6
          res_water: 7
          attack_water: 0
          task: task
          gearcrafting_xp: 4
          artifact2_slot: artifact2_slot
          res_fire: 3
          name: name
          max_xp: 1
          jewelrycrafting_xp: 9
          task_total: 4
          weaponcrafting_max_xp: 7
          alchemy_max_xp: 1
          skin: ""
          attack_air: 7
          helmet_slot: helmet_slot
          res_air: 5
          artifact1_slot: artifact1_slot
          ring1_slot: ring1_slot
          max_hp: 6
          inventory:
          - code: code
            quantity: 0
            slot: 9
          - code: code
            quantity: 0
            slot: 9
          speed: 5
          dmg_air: 7
          wisdom: 6
          gold: 5
          boots_slot: boots_slot
          utility2_slot_quantity: 0
          fishing_level: 7
          gearcrafting_max_xp: 5
          woodcutting_level: 3
          jewelrycrafting_level: 9
          leg_armor_slot: leg_armor_slot
          woodcutting_max_xp: 4
          attack_earth: 7
          jewelrycrafting_max_xp: 6
          cooking_level: 8
          dmg_earth: 4
          artifact3_slot: artifact3_slot
          mining_level: 2
          cooldown_expiration: 2000-01-23T04:56:07.000+00:00
          cooking_xp: 9
          woodcutting_xp: 2
          haste: 6
          ring2_slot: ring2_slot
          task_progress: 1
          weapon_slot: weapon_slot
          inventory_max_items: 7
          bag_slot: bag_slot
          xp: 6
          x: 3
          fishing_max_xp: 1
          "y": 4
          rune_slot: rune_slot
          weaponcrafting_level: 1
          utility1_slot_quantity: 0
          task_type: task_type
          dmg_fire: 0
          res_earth: 3
          account: account
          dmg: 6
        - attack_fire: 3
          amulet_slot: amulet_slot
          dmg_water: 8
          prospecting: 3
          mining_max_xp: 9
          alchemy_level: 3
          hp: 2
          utility2_slot: utility2_slot
          mining_xp: 7
          critical_strike: 5
          alchemy_xp: 6
          cooldown: 0
          utility1_slot: utility1_slot
          body_armor_slot: body_armor_slot
          gearcrafting_level: 1
          fishing_xp: 1
          shield_slot: shield_slot
          level: 0
          weaponcrafting_xp: 6
          cooking_max_xp: 6
          res_water: 7
          attack_water: 0
          task: task
          gearcrafting_xp: 4
          artifact2_slot: artifact2_slot
          res_fire: 3
          name: name
          max_xp: 1
          jewelrycrafting_xp: 9
          task_total: 4
          weaponcrafting_max_xp: 7
          alchemy_max_xp: 1
          skin: ""
          attack_air: 7
          helmet_slot: helmet_slot
          res_air: 5
          artifact1_slot: artifact1_slot
          ring1_slot: ring1_slot
          max_hp: 6
          inventory:
          - code: code
            quantity: 0
            slot: 9
          - code: code
            quantity: 0
            slot: 9
          speed: 5
          dmg_air: 7
          wisdom: 6
          gold: 5
          boots_slot: boots_slot
          utility2_slot_quantity: 0
          fishing_level: 7
          gearcrafting_max_xp: 5
          woodcutting_level: 3
          jewelrycrafting_level: 9
          leg_armor_slot: leg_armor_slot
          woodcutting_max_xp: 4
          attack_earth: 7
          jewelrycrafting_max_xp: 6
          cooking_level: 8
          dmg_earth: 4
          artifact3_slot: artifact3_slot
          mining_level: 2
          cooldown_expiration: 2000-01-23T04:56:07.000+00:00
          cooking_xp: 9
          woodcutting_xp: 2
          haste: 6
          ring2_slot: ring2_slot
          task_progress: 1
          weapon_slot: weapon_slot
          inventory_max_items: 7
          bag_slot: bag_slot
          xp: 6
          x: 3
          fishing_max_xp: 1
          "y": 4
          rune_slot: rune_slot
          weaponcrafting_level: 1
          utility1_slot_quantity: 0
          task_type: task_type
          dmg_fire: 0
          res_earth: 3
          account: account
          dmg: 6
      properties:
        data:
          description: List of your characters.
          items:
            $ref: '#/components/schemas/CharacterSchema'
          type: array
      required:
      - data
      title: MyCharactersListSchema
    NPCItem:
      example:
        npc: npc
        code: code
        sell_price: 6
        buy_price: 0
      properties:
        code:
          description: The code of the NPC. This is the NPC's unique identifier (ID).
          title: Code
          type: string
        npc:
          description: Code of the NPC that sells/buys the item.
          title: Npc
          type: string
        buy_price:
          nullable: true
          type: integer
        sell_price:
          nullable: true
          type: integer
      required:
      - buy_price
      - code
      - npc
      - sell_price
      title: NPCItem
    NPCResponseSchema:
      example:
        data:
          code: code
          name: name
          description: description
          type: ""
      properties:
        data:
          $ref: '#/components/schemas/NPCSchema'
      required:
      - data
      title: NPCResponseSchema
    NPCSchema:
      example:
        code: code
        name: name
        description: description
        type: ""
      properties:
        name:
          description: Name of the NPC.
          title: Name
          type: string
        code:
          description: The code of the NPC. This is the NPC's unique identifier (ID).
          title: Code
          type: string
        description:
          description: Description of the NPC.
          title: Description
          type: string
        type:
          allOf:
          - $ref: '#/components/schemas/NPCType'
          description: Type of the NPC.
      required:
      - code
      - description
      - name
      - type
      title: NPCSchema
    NPCType:
      title: NPCType
      type: string
    NPCType_a-zA-Z0-9_-_____:
      $ref: '#/components/schemas/NPCType'
    NpcItemTransactionSchema:
      properties:
        code:
          description: Item code.
          title: Code
          type: string
        quantity:
          description: Item quantity.
          title: Quantity
          type: integer
        price:
          description: Item price.
          title: Price
          type: integer
        total_price:
          description: Total price of the transaction.
          title: Total Price
          type: integer
      required:
      - code
      - price
      - quantity
      - total_price
      title: NpcItemTransactionSchema
    NpcMerchantBuySchema:
      example:
        code: code
        quantity: 8
      properties:
        code:
          description: Item code.
          title: Code
          type: string
        quantity:
          description: Item quantity.
          maximum: 100.0
          minimum: 1.0
          title: Quantity
          type: integer
      required:
      - code
      - quantity
      title: NpcMerchantBuySchema
    NpcMerchantTransactionResponseSchema:
      example:
        data:
          character: ""
          cooldown: ""
          transaction: ""
      properties:
        data:
          $ref: '#/components/schemas/NpcMerchantTransactionSchema'
      required:
      - data
      title: NpcMerchantTransactionResponseSchema
    NpcMerchantTransactionSchema:
      example:
        character: ""
        cooldown: ""
        transaction: ""
      properties:
        cooldown:
          allOf:
          - $ref: '#/components/schemas/CooldownSchema'
          description: Cooldown details.
        transaction:
          allOf:
          - $ref: '#/components/schemas/NpcItemTransactionSchema'
          description: Transaction details.
        character:
          allOf:
          - $ref: '#/components/schemas/CharacterSchema'
          description: Character details.
      required:
      - character
      - cooldown
      - transaction
      title: NpcMerchantTransactionSchema
    RecyclingDataSchema:
      example:
        character: ""
        cooldown: ""
        details: ""
      properties:
        cooldown:
          allOf:
          - $ref: '#/components/schemas/CooldownSchema'
          description: Cooldown details.
        details:
          allOf:
          - $ref: '#/components/schemas/RecyclingItemsSchema'
          description: Craft details.
        character:
          allOf:
          - $ref: '#/components/schemas/CharacterSchema'
          description: Player details.
      required:
      - character
      - cooldown
      - details
      title: RecyclingDataSchema
    RecyclingItemsSchema:
      properties:
        items:
          description: Objects received.
          items:
            $ref: '#/components/schemas/DropSchema'
          type: array
      required:
      - items
      title: RecyclingItemsSchema
    RecyclingResponseSchema:
      example:
        data:
          character: ""
          cooldown: ""
          details: ""
      properties:
        data:
          $ref: '#/components/schemas/RecyclingDataSchema'
      required:
      - data
      title: RecyclingResponseSchema
    RecyclingSchema:
      example:
        code: code
        quantity: 1
      properties:
        code:
          description: Item code.
          pattern: "^[a-zA-Z0-9_-]+$"
          title: Item code
          type: string
        quantity:
          default: 1
          description: Quantity of items to recycle.
          minimum: 1.0
          title: Quantity
          type: integer
      required:
      - code
      title: RecyclingSchema
    ResourceResponseSchema:
      example:
        data:
          drops:
          - code: code
            max_quantity: 1
            min_quantity: 1
            rate: 1
          - code: code
            max_quantity: 1
            min_quantity: 1
            rate: 1
          code: code
          level: 0
          skill: ""
          name: name
      properties:
        data:
          $ref: '#/components/schemas/ResourceSchema'
      required:
      - data
      title: ResourceResponseSchema
    ResourceSchema:
      example:
        drops:
        - code: code
          max_quantity: 1
          min_quantity: 1
          rate: 1
        - code: code
          max_quantity: 1
          min_quantity: 1
          rate: 1
        code: code
        level: 0
        skill: ""
        name: name
      properties:
        name:
          description: The name of the resource
          title: Name
          type: string
        code:
          description: The code of the resource. This is the resource's unique identifier
            (ID).
          title: Code
          type: string
        skill:
          allOf:
          - $ref: '#/components/schemas/GatheringSkill'
          description: The skill required to gather this resource.
          title: Skill code
        level:
          description: The skill level required to gather this resource.
          title: Level
          type: integer
        drops:
          description: The drops of this resource.
          items:
            $ref: '#/components/schemas/DropRateSchema'
          type: array
      required:
      - code
      - drops
      - level
      - name
      - skill
      title: ResourceSchema
    ResponseSchema:
      example:
        message: message
      properties:
        message:
          title: Message
          type: string
      required:
      - message
      title: ResponseSchema
    RewardDataResponseSchema:
      example:
        data:
          character: ""
          cooldown: ""
          rewards: ""
      properties:
        data:
          $ref: '#/components/schemas/RewardDataSchema'
      required:
      - data
      title: RewardDataResponseSchema
    RewardDataSchema:
      example:
        character: ""
        cooldown: ""
        rewards: ""
      properties:
        cooldown:
          allOf:
          - $ref: '#/components/schemas/CooldownSchema'
          description: Cooldown details.
        rewards:
          allOf:
          - $ref: '#/components/schemas/RewardsSchema'
          description: Reward details.
        character:
          allOf:
          - $ref: '#/components/schemas/CharacterSchema'
          description: Player details.
      required:
      - character
      - cooldown
      - rewards
      title: RewardDataSchema
    RewardResponseSchema:
      example:
        data:
          code: code
          max_quantity: 1
          min_quantity: 1
          rate: 1
      properties:
        data:
          $ref: '#/components/schemas/DropRateSchema'
      required:
      - data
      title: RewardResponseSchema
    RewardsSchema:
      properties:
        items:
          description: Items rewards.
          items:
            $ref: '#/components/schemas/SimpleItemSchema'
          type: array
        gold:
          description: Gold rewards.
          title: Gold
          type: integer
      required:
      - gold
      - items
      title: RewardsSchema
    SimpleEffectSchema:
      example:
        code: code
        value: 6
      properties:
        code:
          description: Effect code.
          pattern: "^[a-zA-Z0-9_-]+$"
          title: Code
          type: string
        value:
          description: Effect value.
          title: Value
          type: integer
      required:
      - code
      - value
      title: SimpleEffectSchema
    SimpleItemSchema:
      example:
        code: code
        quantity: 1
      properties:
        code:
          description: Item code.
          pattern: "^[a-zA-Z0-9_-]+$"
          title: Code
          type: string
        quantity:
          description: Item quantity.
          minimum: 1.0
          title: Quantity
          type: integer
      required:
      - code
      - quantity
      title: SimpleItemSchema
    Skill:
      enum:
      - weaponcrafting
      - gearcrafting
      - jewelrycrafting
      - cooking
      - woodcutting
      - mining
      - alchemy
      - fishing
      title: Skill
      type: string
    SkillDataSchema:
      example:
        character: ""
        cooldown: ""
        details: ""
      properties:
        cooldown:
          allOf:
          - $ref: '#/components/schemas/CooldownSchema'
          description: Cooldown details.
        details:
          allOf:
          - $ref: '#/components/schemas/SkillInfoSchema'
          description: Craft details.
        character:
          allOf:
          - $ref: '#/components/schemas/CharacterSchema'
          description: Player details.
      required:
      - character
      - cooldown
      - details
      title: SkillDataSchema
    SkillInfoSchema:
      properties:
        xp:
          description: The amount of xp gained.
          title: Xp
          type: integer
        items:
          description: Objects received.
          items:
            $ref: '#/components/schemas/DropSchema'
          type: array
      required:
      - items
      - xp
      title: SkillInfoSchema
    SkillResponseSchema:
      example:
        data:
          character: ""
          cooldown: ""
          details: ""
      properties:
        data:
          $ref: '#/components/schemas/SkillDataSchema'
      required:
      - data
      title: SkillResponseSchema
    Skill_a-zA-Z0-9_-_____:
      $ref: '#/components/schemas/Skill'
    StatusResponseSchema:
      example:
        data:
          characters_online: 6
          server_time: 2000-01-23T04:56:07.000+00:00
          last_wipe: last_wipe
          max_level: 0
          version: version
          announcements:
          - created_at: 2000-01-23T04:56:07.000+00:00
            message: message
          - created_at: 2000-01-23T04:56:07.000+00:00
            message: message
          next_wipe: next_wipe
          status: status
      properties:
        data:
          $ref: '#/components/schemas/StatusSchema'
      required:
      - data
      title: StatusResponseSchema
    StatusSchema:
      example:
        characters_online: 6
        server_time: 2000-01-23T04:56:07.000+00:00
        last_wipe: last_wipe
        max_level: 0
        version: version
        announcements:
        - created_at: 2000-01-23T04:56:07.000+00:00
          message: message
        - created_at: 2000-01-23T04:56:07.000+00:00
          message: message
        next_wipe: next_wipe
        status: status
      properties:
        status:
          description: Server status
          title: Status
          type: string
        version:
          description: Game version.
          title: Version
          type: string
        max_level:
          description: Maximum level.
          title: Max Level
          type: integer
        characters_online:
          description: Characters online.
          title: Characters Online
          type: integer
        server_time:
          description: Server time.
          format: date-time
          title: Server Time
          type: string
        announcements:
          description: Server announcements.
          items:
            $ref: '#/components/schemas/AnnouncementSchema'
          type: array
        last_wipe:
          description: Last server wipe.
          title: Last Wipe
          type: string
        next_wipe:
          description: Next server wipe.
          title: Next Wipe
          type: string
      required:
      - announcements
      - characters_online
      - last_wipe
      - max_level
      - next_wipe
      - server_time
      - status
      - version
      title: StatusSchema
    TaskCancelledResponseSchema:
      example:
        data:
          character: ""
          cooldown: ""
      properties:
        data:
          $ref: '#/components/schemas/TaskCancelledSchema'
      required:
      - data
      title: TaskCancelledResponseSchema
    TaskCancelledSchema:
      example:
        character: ""
        cooldown: ""
      properties:
        cooldown:
          allOf:
          - $ref: '#/components/schemas/CooldownSchema'
          description: Cooldown details.
        character:
          allOf:
          - $ref: '#/components/schemas/CharacterSchema'
          description: Player details.
      required:
      - character
      - cooldown
      title: TaskCancelledSchema
    TaskDataSchema:
      example:
        character: ""
        task: ""
        cooldown: ""
      properties:
        cooldown:
          allOf:
          - $ref: '#/components/schemas/CooldownSchema'
          description: Cooldown details.
        task:
          allOf:
          - $ref: '#/components/schemas/TaskSchema'
          description: Task details.
        character:
          allOf:
          - $ref: '#/components/schemas/CharacterSchema'
          description: Player details.
      required:
      - character
      - cooldown
      - task
      title: TaskDataSchema
    TaskFullResponseSchema:
      example:
        data:
          code: code
          max_quantity: 1
          min_quantity: 6
          level: 0
          skill: skill
          type: ""
          rewards: ""
      properties:
        data:
          $ref: '#/components/schemas/TaskFullSchema'
      required:
      - data
      title: TaskFullResponseSchema
    TaskFullSchema:
      example:
        code: code
        max_quantity: 1
        min_quantity: 6
        level: 0
        skill: skill
        type: ""
        rewards: ""
      properties:
        code:
          description: Task objective.
          title: Code
          type: string
        level:
          description: Task level.
          title: Level
          type: integer
        type:
          allOf:
          - $ref: '#/components/schemas/TaskType'
          description: The type of task.
          title: Type
        min_quantity:
          description: Minimum amount of task.
          title: Min Quantity
          type: integer
        max_quantity:
          description: Maximum amount of task.
          title: Max Quantity
          type: integer
        skill:
          nullable: true
          type: string
        rewards:
          allOf:
          - $ref: '#/components/schemas/RewardsSchema'
          description: Rewards.
      required:
      - code
      - level
      - max_quantity
      - min_quantity
      - rewards
      - skill
      - type
      title: TaskFullSchema
    TaskResponseSchema:
      example:
        data:
          character: ""
          task: ""
          cooldown: ""
      properties:
        data:
          $ref: '#/components/schemas/TaskDataSchema'
      required:
      - data
      title: TaskResponseSchema
    TaskSchema:
      properties:
        code:
          description: Task objective.
          title: Code
          type: string
        type:
          allOf:
          - $ref: '#/components/schemas/TaskType'
          description: The type of task.
          title: Type
        total:
          description: The total required to complete the task.
          title: Total
          type: integer
        rewards:
          allOf:
          - $ref: '#/components/schemas/RewardsSchema'
          description: Rewards for completing the task.
      required:
      - code
      - rewards
      - total
      - type
      title: TaskSchema
    TaskTradeDataSchema:
      example:
        character: ""
        trade: ""
        cooldown: ""
      properties:
        cooldown:
          allOf:
          - $ref: '#/components/schemas/CooldownSchema'
          description: Cooldown details.
        trade:
          allOf:
          - $ref: '#/components/schemas/TaskTradeSchema'
          description: Reward details.
        character:
          allOf:
          - $ref: '#/components/schemas/CharacterSchema'
          description: Player details.
      required:
      - character
      - cooldown
      - trade
      title: TaskTradeDataSchema
    TaskTradeResponseSchema:
      example:
        data:
          character: ""
          trade: ""
          cooldown: ""
      properties:
        data:
          $ref: '#/components/schemas/TaskTradeDataSchema'
      required:
      - data
      title: TaskTradeResponseSchema
    TaskTradeSchema:
      properties:
        code:
          description: Item code.
          title: Code
          type: string
        quantity:
          description: Item quantity.
          title: Quantity
          type: integer
      required:
      - code
      - quantity
      title: TaskTradeSchema
    TaskType:
      enum:
      - monsters
      - items
      title: TaskType
      type: string
    TaskType_a-zA-Z0-9_-_____:
      $ref: '#/components/schemas/TaskType'
    TokenResponseSchema:
      example:
        token: token
      properties:
        token:
          title: Token
          type: string
      required:
      - token
      title: TokenResponseSchema
    UnequipSchema:
      example:
        quantity: 8
        slot: ""
      properties:
        slot:
          allOf:
          - $ref: '#/components/schemas/ItemSlot'
          description: Item slot.
        quantity:
          default: 1
          description: Item quantity. Applicable to utilities only.
          maximum: 100.0
          minimum: 1.0
          title: Quantity
          type: integer
      required:
      - slot
      title: UnequipSchema
    UseItemResponseSchema:
      example:
        data:
          item: ""
          character: ""
          cooldown: ""
      properties:
        data:
          $ref: '#/components/schemas/UseItemSchema'
      required:
      - data
      title: UseItemResponseSchema
    UseItemSchema:
      example:
        item: ""
        character: ""
        cooldown: ""
      properties:
        cooldown:
          allOf:
          - $ref: '#/components/schemas/CooldownSchema'
          description: Cooldown details.
        item:
          allOf:
          - $ref: '#/components/schemas/ItemSchema'
          description: Item details.
        character:
          allOf:
          - $ref: '#/components/schemas/CharacterSchema'
          description: Player details.
      required:
      - character
      - cooldown
      - item
      title: UseItemSchema
    ValidationError:
      properties:
        loc:
          items:
            $ref: '#/components/schemas/ValidationError_loc_inner'
          type: array
        msg:
          title: Message
          type: string
        type:
          title: Error Type
          type: string
      required:
      - loc
      - msg
      - type
      title: ValidationError
    ValidationError_loc_inner:
      anyOf:
      - type: string
      - type: integer
  securitySchemes:
    JWTBearer:
      scheme: bearer
      type: http
    HTTPBasic:
      scheme: basic
      type: http

